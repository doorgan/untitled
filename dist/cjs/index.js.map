{"version":3,"file":"index.js","sources":["../../node_modules/umap/esm/index.js","../../node_modules/uparser/esm/index.js","../../node_modules/uarray/esm/index.js","../../node_modules/uwire/esm/index.js","../../node_modules/udomdiff/esm/index.js","../../node_modules/uhandlers/esm/index.js","../../node_modules/@ungap/create-content/esm/index.js","../../node_modules/uhtml/esm/node.js","../../node_modules/uhtml/esm/handlers.js","../../node_modules/uhtml/esm/rabbit.js","../../node_modules/uhtml/esm/index.js","../../node_modules/plain-tag/esm/index.js","../../node_modules/ramda/src/internal/_arity.js","../../node_modules/ramda/src/internal/_isPlaceholder.js","../../node_modules/ramda/src/internal/_curry1.js","../../node_modules/ramda/src/internal/_curry2.js","../../node_modules/ramda/src/internal/_curryN.js","../../node_modules/ramda/src/curryN.js","../../node_modules/flyd/lib/index.js","../../node_modules/mergerino/dist/mergerino.min.js","../../src/state.ts","../../src/index.ts"],"sourcesContent":["export default _ => ({\n  // About: get: _.get.bind(_)\n  // It looks like WebKit/Safari didn't optimize bind at all,\n  // so that using bind slows it down by 60%.\n  // Firefox and Chrome are just fine in both cases,\n  // so let's use the approach that works fast everywhere 👍\n  get: key => _.get(key),\n  set: (key, value) => (_.set(key, value), value)\n});\n","const attr = /([^\\s\\\\>\"'=]+)\\s*=\\s*(['\"]?)$/;\nconst empty = /^(?:area|base|br|col|embed|hr|img|input|keygen|link|menuitem|meta|param|source|track|wbr)$/i;\nconst node = /<[a-z][^>]+$/i;\nconst notNode = />[^<>]*$/;\nconst selfClosing = /<([a-z]+[a-z0-9:._-]*)([^>]*?)(\\/>)/ig;\nconst trimEnd = /\\s+$/;\n\nconst isNode = (template, i) => (\n    0 < i-- && (\n    node.test(template[i]) || (\n      !notNode.test(template[i]) && isNode(template, i)\n    )\n  )\n);\n\nconst regular = (original, name, extra) => empty.test(name) ?\n                  original : `<${name}${extra.replace(trimEnd,'')}></${name}>`;\n\nexport default (template, prefix, svg) => {\n  const text = [];\n  const {length} = template;\n  for (let i = 1; i < length; i++) {\n    const chunk = template[i - 1];\n    text.push(attr.test(chunk) && isNode(template, i) ?\n      chunk.replace(\n        attr,\n        (_, $1, $2) => `${prefix}${i - 1}=${$2 || '\"'}${$1}${$2 ? '' : '\"'}`\n      ) :\n      `${chunk}<!--${prefix}${i - 1}-->`\n    );\n  }\n  text.push(template[length - 1]);\n  const output = text.join('').trim();\n  return svg ? output : output.replace(selfClosing, regular);\n};\n","const {isArray} = Array;\nconst {indexOf, slice} = [];\n\nexport {isArray, indexOf, slice};\n","import {slice} from 'uarray';\n\nconst ELEMENT_NODE = 1;\nconst nodeType = 111;\n\nconst remove = ({firstChild, lastChild}) => {\n  const range = document.createRange();\n  range.setStartAfter(firstChild);\n  range.setEndAfter(lastChild);\n  range.deleteContents();\n  return firstChild;\n};\n\nexport const diffable = (node, operation) => node.nodeType === nodeType ?\n  ((1 / operation) < 0 ?\n    (operation ? remove(node) : node.lastChild) :\n    (operation ? node.valueOf() : node.firstChild)) :\n  node\n;\n\nexport const persistent = fragment => {\n  const {childNodes} = fragment;\n  const {length} = childNodes;\n  if (length < 2)\n    return length ? childNodes[0] : fragment;\n  const nodes = slice.call(childNodes, 0);\n  const firstChild = nodes[0];\n  const lastChild = nodes[length - 1];\n  return {\n    ELEMENT_NODE,\n    nodeType,\n    firstChild,\n    lastChild,\n    valueOf() {\n      if (childNodes.length !== length) {\n        let i = 0;\n        while (i < length)\n          fragment.appendChild(nodes[i++]);\n      }\n      return fragment;\n    }\n  };\n};\n","/**\n * ISC License\n *\n * Copyright (c) 2020, Andrea Giammarchi, @WebReflection\n *\n * Permission to use, copy, modify, and/or distribute this software for any\n * purpose with or without fee is hereby granted, provided that the above\n * copyright notice and this permission notice appear in all copies.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n * REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n * AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE\n * OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n * PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * @param {Node} parentNode The container where children live\n * @param {Node[]} a The list of current/live children\n * @param {Node[]} b The list of future children\n * @param {(entry: Node, action: number) => Node} get\n * The callback invoked per each entry related DOM operation.\n * @param {Node} [before] The optional node used as anchor to insert before.\n * @returns {Node[]} The same list of future children.\n */\nexport default (parentNode, a, b, get, before) => {\n  const bLength = b.length;\n  let aEnd = a.length;\n  let bEnd = bLength;\n  let aStart = 0;\n  let bStart = 0;\n  let map = null;\n  while (aStart < aEnd || bStart < bEnd) {\n    // append head, tail, or nodes in between: fast path\n    if (aEnd === aStart) {\n      // we could be in a situation where the rest of nodes that\n      // need to be added are not at the end, and in such case\n      // the node to `insertBefore`, if the index is more than 0\n      // must be retrieved, otherwise it's gonna be the first item.\n      const node = bEnd < bLength ?\n        (bStart ?\n          (get(b[bStart - 1], -0).nextSibling) :\n          get(b[bEnd - bStart], 0)) :\n        before;\n      while (bStart < bEnd)\n        parentNode.insertBefore(get(b[bStart++], 1), node);\n    }\n    // remove head or tail: fast path\n    else if (bEnd === bStart) {\n      while (aStart < aEnd) {\n        // remove the node only if it's unknown or not live\n        if (!map || !map.has(a[aStart]))\n          parentNode.removeChild(get(a[aStart], -1));\n        aStart++;\n      }\n    }\n    // same node: fast path\n    else if (a[aStart] === b[bStart]) {\n      aStart++;\n      bStart++;\n    }\n    // same tail: fast path\n    else if (a[aEnd - 1] === b[bEnd - 1]) {\n      aEnd--;\n      bEnd--;\n    }\n    // The once here single last swap \"fast path\" has been removed in v1.1.0\n    // https://github.com/WebReflection/udomdiff/blob/single-final-swap/esm/index.js#L69-L85\n    // reverse swap: also fast path\n    else if (\n      a[aStart] === b[bEnd - 1] &&\n      b[bStart] === a[aEnd - 1]\n    ) {\n      // this is a \"shrink\" operation that could happen in these cases:\n      // [1, 2, 3, 4, 5]\n      // [1, 4, 3, 2, 5]\n      // or asymmetric too\n      // [1, 2, 3, 4, 5]\n      // [1, 2, 3, 5, 6, 4]\n      const node = get(a[--aEnd], -1).nextSibling;\n      parentNode.insertBefore(\n        get(b[bStart++], 1),\n        get(a[aStart++], -1).nextSibling\n      );\n      parentNode.insertBefore(get(b[--bEnd], 1), node);\n      // mark the future index as identical (yeah, it's dirty, but cheap 👍)\n      // The main reason to do this, is that when a[aEnd] will be reached,\n      // the loop will likely be on the fast path, as identical to b[bEnd].\n      // In the best case scenario, the next loop will skip the tail,\n      // but in the worst one, this node will be considered as already\n      // processed, bailing out pretty quickly from the map index check\n      a[aEnd] = b[bEnd];\n    }\n    // map based fallback, \"slow\" path\n    else {\n      // the map requires an O(bEnd - bStart) operation once\n      // to store all future nodes indexes for later purposes.\n      // In the worst case scenario, this is a full O(N) cost,\n      // and such scenario happens at least when all nodes are different,\n      // but also if both first and last items of the lists are different\n      if (!map) {\n        map = new Map;\n        let i = bStart;\n        while (i < bEnd)\n          map.set(b[i], i++);\n      }\n      // if it's a future node, hence it needs some handling\n      if (map.has(a[aStart])) {\n        // grab the index of such node, 'cause it might have been processed\n        const index = map.get(a[aStart]);\n        // if it's not already processed, look on demand for the next LCS\n        if (bStart < index && index < bEnd) {\n          let i = aStart;\n          // counts the amount of nodes that are the same in the future\n          let sequence = 1;\n          while (++i < aEnd && i < bEnd && map.get(a[i]) === (index + sequence))\n            sequence++;\n          // effort decision here: if the sequence is longer than replaces\n          // needed to reach such sequence, which would brings again this loop\n          // to the fast path, prepend the difference before a sequence,\n          // and move only the future list index forward, so that aStart\n          // and bStart will be aligned again, hence on the fast path.\n          // An example considering aStart and bStart are both 0:\n          // a: [1, 2, 3, 4]\n          // b: [7, 1, 2, 3, 6]\n          // this would place 7 before 1 and, from that time on, 1, 2, and 3\n          // will be processed at zero cost\n          if (sequence > (index - bStart)) {\n            const node = get(a[aStart], 0);\n            while (bStart < index)\n              parentNode.insertBefore(get(b[bStart++], 1), node);\n          }\n          // if the effort wasn't good enough, fallback to a replace,\n          // moving both source and target indexes forward, hoping that some\n          // similar node will be found later on, to go back to the fast path\n          else {\n            parentNode.replaceChild(\n              get(b[bStart++], 1),\n              get(a[aStart++], -1)\n            );\n          }\n        }\n        // otherwise move the source forward, 'cause there's nothing to do\n        else\n          aStart++;\n      }\n      // this node has no meaning in the future list, so it's more than safe\n      // to remove it, and check the next live node out instead, meaning\n      // that only the live list index should be forwarded\n      else\n        parentNode.removeChild(get(a[aStart++], -1));\n    }\n  }\n  return b;\n};\n","import {isArray} from 'uarray';\n\nexport const aria = node => values => {\n  for (const key in values) {\n    const name = key === 'role' ? key : `aria-${key}`;\n    const value = values[key];\n    if (value == null)\n      node.removeAttribute(name);\n    else\n      node.setAttribute(name, value);\n  }\n};\n\nexport const attribute = (node, name) => {\n  let oldValue, orphan = true;\n  const attributeNode = document.createAttributeNS(null, name);\n  return newValue => {\n    if (oldValue !== newValue) {\n      oldValue = newValue;\n      if (oldValue == null) {\n        if (!orphan) {\n          node.removeAttributeNode(attributeNode);\n          orphan = true;\n        }\n      }\n      else {\n        attributeNode.value = newValue;\n        if (orphan) {\n          node.setAttributeNodeNS(attributeNode);\n          orphan = false;\n        }\n      }\n    }\n  };\n};\n\nexport const data = ({dataset}) => values => {\n  for (const key in values) {\n    const value = values[key];\n    if (value == null)\n      delete dataset[key];\n    else\n      dataset[key] = value;\n  }\n};\n\nexport const event = (node, name) => {\n  let oldValue, type = name.slice(2);\n  if (!(name in node) && name.toLowerCase() in node)\n    type = type.toLowerCase();\n  return newValue => {\n    const info = isArray(newValue) ? newValue : [newValue, false];\n    if (oldValue !== info[0]) {\n      if (oldValue)\n        node.removeEventListener(type, oldValue, info[1]);\n      if (oldValue = info[0])\n        node.addEventListener(type, oldValue, info[1]);\n    }\n  };\n};\n\nexport const ref = node => value => {\n  if (typeof value === 'function')\n    value(node);\n  else\n    value.current = node;\n};\n\nexport const setter = (node, key) => value => {\n  node[key] = value;\n};\n\nexport const text = node => {\n  let oldValue;\n  return newValue => {\n    if (oldValue != newValue) {\n      oldValue = newValue;\n      node.textContent = newValue == null ? '' : newValue;\n    }\n  };\n};\n","/*! (c) Andrea Giammarchi - ISC */\nvar createContent = (function (document) {'use strict';\n  var FRAGMENT = 'fragment';\n  var TEMPLATE = 'template';\n  var HAS_CONTENT = 'content' in create(TEMPLATE);\n\n  var createHTML = HAS_CONTENT ?\n    function (html) {\n      var template = create(TEMPLATE);\n      template.innerHTML = html;\n      return template.content;\n    } :\n    function (html) {\n      var content = create(FRAGMENT);\n      var template = create(TEMPLATE);\n      var childNodes = null;\n      if (/^[^\\S]*?<(col(?:group)?|t(?:head|body|foot|r|d|h))/i.test(html)) {\n        var selector = RegExp.$1;\n        template.innerHTML = '<table>' + html + '</table>';\n        childNodes = template.querySelectorAll(selector);\n      } else {\n        template.innerHTML = html;\n        childNodes = template.childNodes;\n      }\n      append(content, childNodes);\n      return content;\n    };\n\n  return function createContent(markup, type) {\n    return (type === 'svg' ? createSVG : createHTML)(markup);\n  };\n\n  function append(root, childNodes) {\n    var length = childNodes.length;\n    while (length--)\n      root.appendChild(childNodes[0]);\n  }\n\n  function create(element) {\n    return element === FRAGMENT ?\n      document.createDocumentFragment() :\n      document.createElementNS('http://www.w3.org/1999/xhtml', element);\n  }\n\n  // it could use createElementNS when hasNode is there\n  // but this fallback is equally fast and easier to maintain\n  // it is also battle tested already in all IE\n  function createSVG(svg) {\n    var content = create(FRAGMENT);\n    var template = create('div');\n    template.innerHTML = '<svg xmlns=\"http://www.w3.org/2000/svg\">' + svg + '</svg>';\n    append(content, template.firstChild.childNodes);\n    return content;\n  }\n\n}(document));\nexport default createContent;\n","import createContent from '@ungap/create-content';\nimport {indexOf} from 'uarray';\n\n// from a generic path, retrieves the exact targeted node\nexport const reducePath = ({childNodes}, i) => childNodes[i];\n\n// from a fragment container, create an array of indexes\n// related to its child nodes, so that it's possible\n// to retrieve later on exact node via reducePath\nexport const createPath = node => {\n  const path = [];\n  let {parentNode} = node;\n  while (parentNode) {\n    path.push(indexOf.call(parentNode.childNodes, node));\n    node = parentNode;\n    parentNode = node.parentNode;\n  }\n  return path;\n};\n\nconst {createTreeWalker, importNode} = document;\nexport {createTreeWalker, importNode};\n\n// this \"hack\" tells the library if the browser is IE11 or old Edge\nconst isImportNodeLengthWrong = importNode.length != 1;\n\n// IE11 and old Edge discard empty nodes when cloning, potentially\n// resulting in broken paths to find updates. The workaround here\n// is to import once, upfront, the fragment that will be cloned\n// later on, so that paths are retrieved from one already parsed,\n// hence without missing child nodes once re-cloned.\nexport const createFragment = isImportNodeLengthWrong ?\n  (text, type) => importNode.call(\n    document,\n    createContent(text, type),\n    true\n  ) :\n  createContent;\n\n// IE11 and old Edge have a different createTreeWalker signature that\n// has been deprecated in other browsers. This export is needed only\n// to guarantee the TreeWalker doesn't show warnings and, ultimately, works\nexport const createWalker = isImportNodeLengthWrong ?\n  fragment => createTreeWalker.call(document, fragment, 1 | 128, null, false) :\n  fragment => createTreeWalker.call(document, fragment, 1 | 128);\n","import {isArray, slice} from 'uarray';\nimport udomdiff from 'udomdiff';\nimport {aria, attribute, data, event, ref, setter, text} from 'uhandlers';\nimport {diffable} from 'uwire';\n\nimport {reducePath} from './node.js';\n\n// this helper avoid code bloat around handleAnything() callback\nconst diff = (comment, oldNodes, newNodes) => udomdiff(\n  comment.parentNode,\n  // TODO: there is a possible edge case where a node has been\n  //       removed manually, or it was a keyed one, attached\n  //       to a shared reference between renders.\n  //       In this case udomdiff might fail at removing such node\n  //       as its parent won't be the expected one.\n  //       The best way to avoid this issue is to filter oldNodes\n  //       in search of those not live, or not in the current parent\n  //       anymore, but this would require both a change to uwire,\n  //       exposing a parentNode from the firstChild, as example,\n  //       but also a filter per each diff that should exclude nodes\n  //       that are not in there, penalizing performance quite a lot.\n  //       As this has been also a potential issue with domdiff,\n  //       and both lighterhtml and hyperHTML might fail with this\n  //       very specific edge case, I might as well document this possible\n  //       \"diffing shenanigan\" and call it a day.\n  oldNodes,\n  newNodes,\n  diffable,\n  comment\n);\n\n// if an interpolation represents a comment, the whole\n// diffing will be related to such comment.\n// This helper is in charge of understanding how the new\n// content for such interpolation/hole should be updated\nconst handleAnything = comment => {\n  let oldValue, text, nodes = [];\n  const anyContent = newValue => {\n    switch (typeof newValue) {\n      // primitives are handled as text content\n      case 'string':\n      case 'number':\n      case 'boolean':\n        if (oldValue !== newValue) {\n          oldValue = newValue;\n          if (text)\n            text.textContent = newValue;\n          else\n            text = document.createTextNode(newValue);\n          nodes = diff(comment, nodes, [text]);\n        }\n        break;\n      // null, and undefined are used to cleanup previous content\n      case 'object':\n      case 'undefined':\n        if (newValue == null) {\n          if (oldValue != newValue) {\n            oldValue = newValue;\n            nodes = diff(comment, nodes, []);\n          }\n          break;\n        }\n        // arrays and nodes have a special treatment\n        if (isArray(newValue)) {\n          oldValue = newValue;\n          // arrays can be used to cleanup, if empty\n          if (newValue.length === 0)\n            nodes = diff(comment, nodes, []);\n          // or diffed, if these contains nodes or \"wires\"\n          else if (typeof newValue[0] === 'object')\n            nodes = diff(comment, nodes, newValue);\n          // in all other cases the content is stringified as is\n          else\n            anyContent(String(newValue));\n          break;\n        }\n        // if the new value is a DOM node, or a wire, and it's\n        // different from the one already live, then it's diffed.\n        // if the node is a fragment, it's appended once via its childNodes\n        // There is no `else` here, meaning if the content\n        // is not expected one, nothing happens, as easy as that.\n        if ('ELEMENT_NODE' in newValue && oldValue !== newValue) {\n          oldValue = newValue;\n          nodes = diff(\n            comment,\n            nodes,\n            newValue.nodeType === 11 ?\n              slice.call(newValue.childNodes) :\n              [newValue]\n          );\n        }\n    }\n  };\n  return anyContent;\n};\n\n// attributes can be:\n//  * ref=${...}      for hooks and other purposes\n//  * aria=${...}     for aria attributes\n//  * .dataset=${...} for dataset related attributes\n//  * .setter=${...}  for Custom Elements setters or nodes with setters\n//                    such as buttons, details, options, select, etc\n//  * onevent=${...}  to automatically handle event listeners\n//  * generic=${...}  to handle an attribute just like an attribute\nconst handleAttribute = (node, name/*, svg*/) => {\n  if (name === 'ref')\n    return ref(node);\n\n  if (name === 'aria')\n    return aria(node);\n\n  if (name === '.dataset')\n    return data(node);\n\n  if (name.slice(0, 1) === '.')\n    return setter(node, name.slice(1));\n\n  if (name.slice(0, 2) === 'on')\n    return event(node, name);\n\n  return attribute(node, name/*, svg*/);\n};\n\n// each mapped update carries the update type and its path\n// the type is either node, attribute, or text, while\n// the path is how to retrieve the related node to update.\n// In the attribute case, the attribute name is also carried along.\nexport function handlers(options) {\n  const {type, path} = options;\n  const node = path.reduceRight(reducePath, this);\n  return type === 'node' ?\n    handleAnything(node) :\n    (type === 'attr' ?\n      handleAttribute(node, options.name/*, options.svg*/) :\n      text(node));\n};\n","import umap from 'umap';\nimport instrument from 'uparser';\nimport {isArray} from 'uarray';\nimport {persistent} from 'uwire';\n\nimport {handlers} from './handlers.js';\nimport {createFragment, createPath, createWalker, importNode} from './node.js';\n\n// the prefix is used to identify either comments, attributes, or nodes\n// that contain the related unique id. In the attribute cases\n// isµX=\"attribute-name\" will be used to map current X update to that\n// attribute name, while comments will be like <!--isµX-->, to map\n// the update to that specific comment node, hence its parent.\n// style and textarea will have <!--isµX--> text content, and are handled\n// directly through text-only updates.\nconst prefix = 'isµ';\n\n// Template Literals are unique per scope and static, meaning a template\n// should be parsed once, and once only, as it will always represent the same\n// content, within the exact same amount of updates each time.\n// This cache relates each template to its unique content and updates.\nconst cache = umap(new WeakMap);\n\nexport const createCache = () => ({\n  stack: [],    // each template gets a stack for each interpolation \"hole\"\n\n  entry: null,  // each entry contains details, such as:\n                //  * the template that is representing\n                //  * the type of node it represents (html or svg)\n                //  * the content fragment with all nodes\n                //  * the list of updates per each node (template holes)\n                //  * the \"wired\" node or fragment that will get updates\n                // if the template or type are different from the previous one\n                // the entry gets re-created each time\n\n  wire: null    // each rendered node represent some wired content and\n                // this reference to the latest one. If different, the node\n                // will be cleaned up and the new \"wire\" will be appended\n});\n\n// the entry stored in the rendered node cache, and per each \"hole\"\nconst createEntry = (type, template) => {\n  const {content, updates} = mapUpdates(type, template);\n  return {type, template, content, updates, wire: null};\n};\n\n// a template is instrumented to be able to retrieve where updates are needed.\n// Each unique template becomes a fragment, cloned once per each other\n// operation based on the same template, i.e. data => html`<p>${data}</p>`\nconst mapTemplate = (type, template) => {\n  const text = instrument(template, prefix, type === 'svg');\n  const content = createFragment(text, type);\n  // once instrumented and reproduced as fragment, it's crawled\n  // to find out where each update is in the fragment tree\n  const tw = createWalker(content);\n  const nodes = [];\n  const length = template.length - 1;\n  let i = 0;\n  // updates are searched via unique names, linearly increased across the tree\n  // <div isµ0=\"attr\" isµ1=\"other\"><!--isµ2--><style><!--isµ3--</style></div>\n  let search = `${prefix}${i}`;\n  while (i < length) {\n    const node = tw.nextNode();\n    // if not all updates are bound but there's nothing else to crawl\n    // it means that there is something wrong with the template.\n    if (!node)\n      throw `bad template: ${text}`;\n    // if the current node is a comment, and it contains isµX\n    // it means the update should take care of any content\n    if (node.nodeType === 8) {\n      // The only comments to be considered are those\n      // which content is exactly the same as the searched one.\n      if (node.textContent === search) {\n        nodes.push({type: 'node', path: createPath(node)});\n        search = `${prefix}${++i}`;\n      }\n    }\n    else {\n      // if the node is not a comment, loop through all its attributes\n      // named isµX and relate attribute updates to this node and the\n      // attribute name, retrieved through node.getAttribute(\"isµX\")\n      // the isµX attribute will be removed as irrelevant for the layout\n      // let svg = -1;\n      while (node.hasAttribute(search)) {\n        nodes.push({\n          type: 'attr',\n          path: createPath(node),\n          name: node.getAttribute(search),\n          //svg: svg < 0 ? (svg = ('ownerSVGElement' in node ? 1 : 0)) : svg\n        });\n        node.removeAttribute(search);\n        search = `${prefix}${++i}`;\n      }\n      // if the node was a style or a textarea one, check its content\n      // and if it is <!--isµX--> then update tex-only this node\n      if (\n        /^(?:style|textarea)$/i.test(node.tagName) &&\n        node.textContent.trim() === `<!--${search}-->`\n      ){\n        node.textContent = '';\n        nodes.push({type: 'text', path: createPath(node)});\n        search = `${prefix}${++i}`;\n      }\n    }\n  }\n  // once all nodes to update, or their attributes, are known, the content\n  // will be cloned in the future to represent the template, and all updates\n  // related to such content retrieved right away without needing to re-crawl\n  // the exact same template, and its content, more than once.\n  return {content, nodes};\n};\n\n// if a template is unknown, perform the previous mapping, otherwise grab\n// its details such as the fragment with all nodes, and updates info.\nconst mapUpdates = (type, template) => {\n  const {content, nodes} = (\n    cache.get(template) ||\n    cache.set(template, mapTemplate(type, template))\n  );\n  // clone deeply the fragment\n  const fragment = importNode.call(document, content, true);\n  // and relate an update handler per each node that needs one\n  const updates = nodes.map(handlers, fragment);\n  // return the fragment and all updates to use within its nodes\n  return {content: fragment, updates};\n};\n\n// as html and svg can be nested calls, but no parent node is known\n// until rendered somewhere, the unroll operation is needed to\n// discover what to do with each interpolation, which will result\n// into an update operation.\nexport const unroll = (info, {type, template, values}) => {\n  const {length} = values;\n  // interpolations can contain holes and arrays, so these need\n  // to be recursively discovered\n  unrollValues(info, values, length);\n  let {entry} = info;\n  // if the cache entry is either null or different from the template\n  // and the type this unroll should resolve, create a new entry\n  // assigning a new content fragment and the list of updates.\n  if (!entry || (entry.template !== template || entry.type !== type))\n    info.entry = (entry = createEntry(type, template));\n  const {content, updates, wire} = entry;\n  // even if the fragment and its nodes is not live yet,\n  // it is already possible to update via interpolations values.\n  for (let i = 0; i < length; i++)\n    updates[i](values[i]);\n  // if the entry was new, or representing a different template or type,\n  // create a new persistent entity to use during diffing.\n  // This is simply a DOM node, when the template has a single container,\n  // as in `<p></p>`, or a \"wire\" in `<p></p><p></p>` and similar cases.\n  return wire || (entry.wire = persistent(content));\n};\n\n// the stack retains, per each interpolation value, the cache\n// related to each interpolation value, or null, if the render\n// was conditional and the value is not special (Array or Hole)\nconst unrollValues = ({stack}, values, length) => {\n  for (let i = 0; i < length; i++) {\n    const hole = values[i];\n    // each Hole gets unrolled and re-assigned as value\n    // so that domdiff will deal with a node/wire, not with a hole\n    if (hole instanceof Hole)\n      values[i] = unroll(\n        stack[i] || (stack[i] = createCache()),\n        hole\n      );\n    // arrays are recursively resolved so that each entry will contain\n    // also a DOM node or a wire, hence it can be diffed if/when needed\n    else if (isArray(hole))\n      unrollValues(\n        stack[i] || (stack[i] = createCache()),\n        hole,\n        hole.length\n      );\n    // if the value is nothing special, the stack doesn't need to retain data\n    // this is useful also to cleanup previously retained data, if the value\n    // was a Hole, or an Array, but not anymore, i.e.:\n    // const update = content => html`<div>${content}</div>`;\n    // update(listOfItems); update(null); update(html`hole`)\n    else\n      stack[i] = null;\n  }\n  if (length < stack.length)\n    stack.splice(length);\n};\n\n/**\n * Holds all details wrappers needed to render the content further on.\n * @constructor\n * @param {string} type The hole type, either `html` or `svg`.\n * @param {string[]} template The template literals used to the define the content.\n * @param {Array} values Zero, one, or more interpolated values to render.\n */\nexport function Hole(type, template, values) {\n  this.type = type;\n  this.template = template;\n  this.values = values;\n};\n","import umap from 'umap';\nimport {Hole, createCache, unroll} from './rabbit.js';\n\nconst {create, defineProperties} = Object;\n\n// both `html` and `svg` template literal tags are polluted\n// with a `for(ref[, id])` and a `node` tag too\nconst tag = type => {\n  // both `html` and `svg` tags have their own cache\n  const keyed = umap(new WeakMap);\n  // keyed operations always re-use the same cache and unroll\n  // the template and its interpolations right away\n  const fixed = cache => (template, ...values) => unroll(\n    cache,\n    {type, template, values}\n  );\n  return defineProperties(\n    // non keyed operations are recognized as instance of Hole\n    // during the \"unroll\", recursively resolved and updated\n    (template, ...values) => new Hole(type, template, values),\n    {\n      for: {\n        // keyed operations need a reference object, usually the parent node\n        // which is showing keyed results, and optionally a unique id per each\n        // related node, handy with JSON results and mutable list of objects\n        // that usually carry a unique identifier\n        value(ref, id) {\n          const memo = keyed.get(ref) || keyed.set(ref, create(null));\n          return memo[id] || (memo[id] = fixed(createCache()));\n        }\n      },\n      node: {\n        // it is possible to create one-off content out of the box via node tag\n        // this might return the single created node, or a fragment with all\n        // nodes present at the root level and, of course, their child nodes\n        value: (template, ...values) => unroll(\n          createCache(),\n          {type, template, values}\n        ).valueOf()\n      }\n    }\n  );\n};\n\n// each rendered node gets its own cache\nconst cache = umap(new WeakMap);\n\n// rendering means understanding what `html` or `svg` tags returned\n// and it relates a specific node to its own unique cache.\n// Each time the content to render changes, the node is cleaned up\n// and the new new content is appended, and if such content is a Hole\n// then it's \"unrolled\" to resolve all its inner nodes.\nconst render = (where, what) => {\n  const hole = typeof what === 'function' ? what() : what;\n  const info = cache.get(where) || cache.set(where, createCache());\n  const wire = hole instanceof Hole ? unroll(info, hole) : hole;\n  if (wire !== info.wire) {\n    info.wire = wire;\n    where.textContent = '';\n    // valueOf() simply returns the node itself, but in case it was a \"wire\"\n    // it will eventually re-append all nodes to its fragment so that such\n    // fragment can be re-appended many times in a meaningful way\n    // (wires are basically persistent fragments facades with special behavior)\n    where.appendChild(wire.valueOf());\n  }\n  return where;\n};\n\nconst html = tag('html');\nconst svg = tag('svg');\n\nexport {Hole, render, html, svg};\n","export default function (t) {\n  for (var s = t[0], i = 1, l = arguments.length; i < l; i++)\n    s += arguments[i] + t[i];\n  return s;\n};\n","function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.apply(this, arguments);\n      };\n    case 1:\n      return function (a0) {\n        return fn.apply(this, arguments);\n      };\n    case 2:\n      return function (a0, a1) {\n        return fn.apply(this, arguments);\n      };\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.apply(this, arguments);\n      };\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.apply(this, arguments);\n      };\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.apply(this, arguments);\n      };\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.apply(this, arguments);\n      };\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.apply(this, arguments);\n      };\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.apply(this, arguments);\n      };\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.apply(this, arguments);\n      };\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.apply(this, arguments);\n      };\n    default:\n      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n}\nmodule.exports = _arity;","function _isPlaceholder(a) {\n       return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}\nmodule.exports = _isPlaceholder;","var _isPlaceholder = /*#__PURE__*/require('./_isPlaceholder');\n\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}\nmodule.exports = _curry1;","var _curry1 = /*#__PURE__*/require('./_curry1');\n\nvar _isPlaceholder = /*#__PURE__*/require('./_isPlaceholder');\n\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n}\nmodule.exports = _curry2;","var _arity = /*#__PURE__*/require('./_arity');\n\nvar _isPlaceholder = /*#__PURE__*/require('./_isPlaceholder');\n\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n      combined[combinedIdx] = result;\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n      combinedIdx += 1;\n    }\n    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n  };\n}\nmodule.exports = _curryN;","var _arity = /*#__PURE__*/require('./internal/_arity');\n\nvar _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _curryN = /*#__PURE__*/require('./internal/_curryN');\n\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      var sumArgs = (...args) => R.sum(args);\n *\n *      var curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n */\n\n\nvar curryN = /*#__PURE__*/_curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n  return _arity(length, _curryN(length, [], fn));\n});\nmodule.exports = curryN;","'use strict';\n\nvar curryN = require('ramda/src/curryN');\n\n// Utility\nfunction isFunction(obj) {\n  return !!(obj && obj.constructor && obj.call && obj.apply);\n}\nfunction trueFn() { return true; }\n\n// Globals\nvar toUpdate = [];\nvar inStream;\nvar order = [];\nvar orderNextIdx = -1;\nvar flushingUpdateQueue = false;\nvar flushingStreamValue = false;\n\nfunction flushing() {\n  return flushingUpdateQueue || flushingStreamValue;\n}\n\n\n/** @namespace */\nvar flyd = {}\n\n// /////////////////////////// API ///////////////////////////////// //\n\n/**\n * Creates a new stream\n *\n * __Signature__: `a -> Stream a`\n *\n * @name flyd.stream\n * @param {*} initialValue - (Optional) the initial value of the stream\n * @return {stream} the stream\n *\n * @example\n * var n = flyd.stream(1); // Stream with initial value `1`\n * var s = flyd.stream(); // Stream with no initial value\n */\nflyd.stream = function(initialValue) {\n  var endStream = createDependentStream([], trueFn);\n  var s = createStream();\n  s.end = endStream;\n  s.fnArgs = [];\n  endStream.listeners.push(s);\n  if (arguments.length > 0) s(initialValue);\n  return s;\n}\n// fantasy-land Applicative\nflyd.stream['fantasy-land/of'] = flyd.stream.of = flyd.stream;\n\n\n/**\n * Create a new dependent stream\n *\n * __Signature__: `(...Stream * -> Stream b -> b) -> [Stream *] -> Stream b`\n *\n * @name flyd.combine\n * @param {Function} fn - the function used to combine the streams\n * @param {Array<stream>} dependencies - the streams that this one depends on\n * @return {stream} the dependent stream\n *\n * @example\n * var n1 = flyd.stream(0);\n * var n2 = flyd.stream(0);\n * var max = flyd.combine(function(n1, n2, self, changed) {\n *   return n1() > n2() ? n1() : n2();\n * }, [n1, n2]);\n */\nflyd.combine = curryN(2, combine);\nfunction combine(fn, streams) {\n  var i, s, deps, depEndStreams;\n  var endStream = createDependentStream([], trueFn);\n  deps = []; depEndStreams = [];\n  for (i = 0; i < streams.length; ++i) {\n    if (streams[i] !== undefined) {\n      deps.push(streams[i]);\n      if (streams[i].end !== undefined) depEndStreams.push(streams[i].end);\n    }\n  }\n  s = createDependentStream(deps, fn);\n  s.depsChanged = [];\n  s.fnArgs = s.deps.concat([s, s.depsChanged]);\n  s.end = endStream;\n  endStream.listeners.push(s);\n  addListeners(depEndStreams, endStream);\n  endStream.deps = depEndStreams;\n  updateStream(s);\n  return s;\n}\n\n/**\n * Returns `true` if the supplied argument is a Flyd stream and `false` otherwise.\n *\n * __Signature__: `* -> Boolean`\n *\n * @name flyd.isStream\n * @param {*} value - the value to test\n * @return {Boolean} `true` if is a Flyd streamn, `false` otherwise\n *\n * @example\n * var s = flyd.stream(1);\n * var n = 1;\n * flyd.isStream(s); //=> true\n * flyd.isStream(n); //=> false\n */\nflyd.isStream = function(stream) {\n  return isFunction(stream) && 'hasVal' in stream;\n}\n\n/**\n * Invokes the body (the function to calculate the value) of a dependent stream\n *\n * By default the body of a dependent stream is only called when all the streams\n * upon which it depends has a value. `immediate` can circumvent this behaviour.\n * It immediately invokes the body of a dependent stream.\n *\n * __Signature__: `Stream a -> Stream a`\n *\n * @name flyd.immediate\n * @param {stream} stream - the dependent stream\n * @return {stream} the same stream\n *\n * @example\n * var s = flyd.stream();\n * var hasItems = flyd.immediate(flyd.combine(function(s) {\n *   return s() !== undefined && s().length > 0;\n * }, [s]);\n * console.log(hasItems()); // logs `false`. Had `immediate` not been\n *                          // used `hasItems()` would've returned `undefined`\n * s([1]);\n * console.log(hasItems()); // logs `true`.\n * s([]);\n * console.log(hasItems()); // logs `false`.\n */\nflyd.immediate = function(s) {\n  if (s.depsMet === false) {\n    s.depsMet = true;\n    updateStream(s);\n  }\n  return s;\n}\n\n/**\n * Changes which `endsStream` should trigger the ending of `s`.\n *\n * __Signature__: `Stream a -> Stream b -> Stream b`\n *\n * @name flyd.endsOn\n * @param {stream} endStream - the stream to trigger the ending\n * @param {stream} stream - the stream to be ended by the endStream\n * @param {stream} the stream modified to be ended by endStream\n *\n * @example\n * var n = flyd.stream(1);\n * var killer = flyd.stream();\n * // `double` ends when `n` ends or when `killer` emits any value\n * var double = flyd.endsOn(flyd.merge(n.end, killer), flyd.combine(function(n) {\n *   return 2 * n();\n * }, [n]);\n*/\nflyd.endsOn = function(endS, s) {\n  detachDeps(s.end);\n  endS.listeners.push(s.end);\n  s.end.deps.push(endS);\n  return s;\n}\n\n/**\n * Map a stream\n *\n * Returns a new stream consisting of every value from `s` passed through\n * `fn`. I.e. `map` creates a new stream that listens to `s` and\n * applies `fn` to every new value.\n * __Signature__: `(a -> result) -> Stream a -> Stream result`\n *\n * @name flyd.map\n * @param {Function} fn - the function that produces the elements of the new stream\n * @param {stream} stream - the stream to map\n * @return {stream} a new stream with the mapped values\n *\n * @example\n * var numbers = flyd.stream(0);\n * var squaredNumbers = flyd.map(function(n) { return n*n; }, numbers);\n */\n// Library functions use self callback to accept (null, undefined) update triggers.\nfunction map(f, s) {\n  return combine(function(s, self) { self(f(s.val)); }, [s]);\n}\nflyd.map = curryN(2, map)\n\n/**\n * Chain a stream\n *\n * also known as flatMap\n *\n * Where `fn` returns a stream this function will flatten the resulting streams.\n * Every time `fn` is called the context of the returned stream will \"switch\" to that stream.\n *\n * __Signature__: `(a -> Stream b) -> Stream a -> Stream b`\n *\n * @name flyd.chain\n * @param {Function} fn - the function that produces the streams to be flattened\n * @param {stream} stream - the stream to map\n * @return {stream} a new stream with the mapped values\n *\n * @example\n * var filter = flyd.stream('who');\n * var items = flyd.chain(function(filter){\n *   return flyd.stream(findUsers(filter));\n * }, filter);\n */\nflyd.chain = curryN(2, chain);\n\n/**\n * Apply a stream\n *\n * Applies the value in `s2` to the function in `s1`.\n *\n * __Signature__: `Stream (a -> b) -> Stream a -> Stream b`\n *\n * @name flyd.ap\n * @param {stream} s1 - The value to be applied\n * @param {stream} s2 - The function expecting the value\n * @return {stream} a new stream with the mapped values\n *\n * @example\n * var add = stream(a => b => a + b)\n * var n1 = stream(1)\n * var n2 = stream(2)\n *\n * var added = flyd.ap(n2, flyd.ap(n1, add)) // stream(3)\n * // can also be written using pipe\n * var added_pipe = add\n *   .pipe(ap(n1))\n *   .pipe(ap(n2));\n * added_pipe() // 3\n */\nflyd.ap = curryN(2, ap);\n\n/**\n * Listen to stream events\n *\n * Similar to `map` except that the returned stream is empty. Use `on` for doing\n * side effects in reaction to stream changes. Use the returned stream only if you\n * need to manually end it.\n *\n * __Signature__: `(a -> result) -> Stream a -> Stream undefined`\n *\n * @name flyd.on\n * @param {Function} cb - the callback\n * @param {stream} stream - the stream\n * @return {stream} an empty stream (can be ended)\n */\nflyd.on = curryN(2, function(f, s) {\n  return combine(function(s) { f(s.val); }, [s]);\n})\n\n/**\n * Creates a new stream with the results of calling the function on every incoming\n * stream with and accumulator and the incoming value.\n *\n * __Signature__: `(a -> b -> a) -> a -> Stream b -> Stream a`\n *\n * @name flyd.scan\n * @param {Function} fn - the function to call\n * @param {*} val - the initial value of the accumulator\n * @param {stream} stream - the stream source\n * @return {stream} the new stream\n *\n * @example\n * var numbers = flyd.stream();\n * var sum = flyd.scan(function(sum, n) { return sum+n; }, 0, numbers);\n * numbers(2)(3)(5);\n * sum(); // 10\n */\nflyd.scan = curryN(3, function(f, acc, s) {\n  var ns = combine(function(s, self) {\n    self(acc = f(acc, s.val));\n  }, [s]);\n  if (!ns.hasVal) ns(acc);\n  return ns;\n});\n\n/**\n * Creates a new stream down which all values from both `stream1` and `stream2`\n * will be sent.\n *\n * __Signature__: `Stream a -> Stream a -> Stream a`\n *\n * @name flyd.merge\n * @param {stream} source1 - one stream to be merged\n * @param {stream} source2 - the other stream to be merged\n * @return {stream} a stream with the values from both sources\n *\n * @example\n * var btn1Clicks = flyd.stream();\n * button1Elm.addEventListener(btn1Clicks);\n * var btn2Clicks = flyd.stream();\n * button2Elm.addEventListener(btn2Clicks);\n * var allClicks = flyd.merge(btn1Clicks, btn2Clicks);\n */\nflyd.merge = curryN(2, function(s1, s2) {\n  var s = flyd.immediate(combine(function(s1, s2, self, changed) {\n    if (changed[0]) {\n      self(changed[0]());\n    } else if (s1.hasVal) {\n      self(s1.val);\n    } else if (s2.hasVal) {\n      self(s2.val);\n    }\n  }, [s1, s2]));\n  flyd.endsOn(combine(function() {\n    return true;\n  }, [s1.end, s2.end]), s);\n  return s;\n});\n\n/**\n * Creates a new stream resulting from applying `transducer` to `stream`.\n *\n * __Signature__: `Transducer -> Stream a -> Stream b`\n *\n * @name flyd.transduce\n * @param {Transducer} xform - the transducer transformation\n * @param {stream} source - the stream source\n * @return {stream} the new stream\n *\n * @example\n * var t = require('transducers.js');\n *\n * var results = [];\n * var s1 = flyd.stream();\n * var tx = t.compose(t.map(function(x) { return x * 2; }), t.dedupe());\n * var s2 = flyd.transduce(tx, s1);\n * flyd.combine(function(s2) { results.push(s2()); }, [s2]);\n * s1(1)(1)(2)(3)(3)(3)(4);\n * results; // => [2, 4, 6, 8]\n */\nflyd.transduce = curryN(2, function(xform, source) {\n  xform = xform(new StreamTransformer());\n  return combine(function(source, self) {\n    var res = xform['@@transducer/step'](undefined, source.val);\n    if (res && res['@@transducer/reduced'] === true) {\n      self.end(true);\n      return res['@@transducer/value'];\n    } else {\n      return res;\n    }\n  }, [source]);\n});\n\n/**\n * Returns `fn` curried to `n`. Use this function to curry functions exposed by\n * modules for Flyd.\n *\n * @name flyd.curryN\n * @function\n * @param {Integer} arity - the function arity\n * @param {Function} fn - the function to curry\n * @return {Function} the curried function\n *\n * @example\n * function add(x, y) { return x + y; };\n * var a = flyd.curryN(2, add);\n * a(2)(4) // => 6\n */\nflyd.curryN = curryN\n\n/**\n * Returns a new stream identical to the original except every\n * value will be passed through `f`.\n *\n * _Note:_ This function is included in order to support the fantasy land\n * specification.\n *\n * __Signature__: Called bound to `Stream a`: `(a -> b) -> Stream b`\n *\n * @name stream.map\n * @param {Function} function - the function to apply\n * @return {stream} a new stream with the values mapped\n *\n * @example\n * var numbers = flyd.stream(0);\n * var squaredNumbers = numbers.map(function(n) { return n*n; });\n */\nfunction boundMap(f) { return map(f, this); }\n\n/**\n * Returns the result of applying function `fn` to this stream\n *\n * __Signature__: Called bound to `Stream a`: `(a -> Stream b) -> Stream b`\n *\n * @name stream.pipe\n * @param {Function} fn - the function to apply\n * @return {stream} A new stream\n *\n * @example\n * var numbers = flyd.stream(0);\n * var squaredNumbers = numbers.pipe(flyd.map(function(n){ return n*n; }));\n */\nfunction operator_pipe(f) { return f(this) }\n\nfunction boundChain(f) {\n  return chain(f, this);\n}\n\nfunction chain(f, s) {\n  // Internal state to end flat map stream\n  var flatEnd = flyd.stream(1);\n  var internalEnded = flyd.on(function() {\n    var alive = flatEnd() - 1;\n    flatEnd(alive);\n    if (alive <= 0) {\n      flatEnd.end(true);\n    }\n  });\n\n  internalEnded(s.end);\n  var last = flyd.stream();\n  var flatStream = flyd.combine(function(s, own) {\n    last.end(true)\n    // Our fn stream makes streams\n    var newS = f(s());\n    flatEnd(flatEnd() + 1);\n    internalEnded(newS.end);\n\n    // Update self on call -- newS is never handed out so deps don't matter\n    last = map(own, newS);\n  }, [s]);\n\n  flyd.endsOn(flatEnd.end, flatStream);\n\n  return flatStream;\n}\n\nflyd.fromPromise = function fromPromise(p) {\n  var s = flyd.stream();\n  p.then(function(val) {\n    s(val);\n    s.end(true);\n  });\n  return s;\n}\n\nflyd.flattenPromise = function flattenPromise(s) {\n  return combine(function(s, self) {\n    s().then(self);\n  }, [s])\n}\n\n\n/**\n * Returns a new stream which is the result of applying the\n * functions from `this` stream to the values in `stream` parameter.\n *\n * `this` stream must be a stream of functions.\n *\n * _Note:_ This function is included in order to support the fantasy land\n * specification.\n *\n * __Signature__: Called bound to `Stream (a -> b)`: `a -> Stream b`\n *\n * @name stream.ap\n * @param {stream} stream - the values stream\n * @return {stream} a new stream with the functions applied to values\n *\n * @example\n * var add = flyd.curryN(2, function(x, y) { return x + y; });\n * var numbers1 = flyd.stream();\n * var numbers2 = flyd.stream();\n * var addToNumbers1 = flyd.map(add, numbers1);\n * var added = addToNumbers1.ap(numbers2);\n */\nfunction ap(s2, s1) {\n  return combine(function(s1, s2, self) { self(s1.val(s2.val)); }, [s1, s2]);\n}\n\nfunction boundAp(s2) {\n  return ap(s2, this);\n}\n\n/**\n * @private\n */\nfunction fantasy_land_ap(s1) {\n  return ap(this, s1);\n}\n\n/**\n * Get a human readable view of a stream\n * @name stream.toString\n * @return {String} the stream string representation\n */\nfunction streamToString() {\n  return 'stream(' + this.val + ')';\n}\n\n/**\n * @name stream.end\n * @memberof stream\n * A stream that emits `true` when the stream ends. If `true` is pushed down the\n * stream the parent stream ends.\n */\n\n/**\n * @name stream.of\n * @function\n * @memberof stream\n * Returns a new stream with `value` as its initial value. It is identical to\n * calling `flyd.stream` with one argument.\n *\n * __Signature__: Called bound to `Stream (a)`: `b -> Stream b`\n *\n * @param {*} value - the initial value\n * @return {stream} the new stream\n *\n * @example\n * var n = flyd.stream(1);\n * var m = n.of(1);\n */\n\n// /////////////////////////// PRIVATE ///////////////////////////////// //\n/**\n * @private\n * Create a stream with no dependencies and no value\n * @return {Function} a flyd stream\n */\nfunction createStream() {\n  function s(n) {\n    if (arguments.length === 0) return s.val\n    updateStreamValue(n, s)\n    return s\n  }\n  s.hasVal = false;\n  s.val = undefined;\n  s.updaters = [];\n  s.listeners = [];\n  s.queued = false;\n  s.end = undefined;\n\n  // fantasy-land compatibility\n  s.ap = boundAp;\n  s['fantasy-land/map'] = s.map = boundMap;\n  s['fantasy-land/ap'] = fantasy_land_ap;\n  s['fantasy-land/of'] = s.of = flyd.stream;\n  s['fantasy-land/chain'] = s.chain = boundChain;\n\n  s.pipe = operator_pipe;\n\n  // According to the fantasy-land Applicative specification\n  // Given a value f, one can access its type representative via the constructor property:\n  // `f.constructor.of`\n  s.constructor = flyd.stream;\n\n  s.toJSON = function() {\n    return s.val;\n  }\n  s.toString = streamToString;\n  return s;\n}\n\n/**\n * @private\n * Create a dependent stream\n * @param {Array<stream>} dependencies - an array of the streams\n * @param {Function} fn - the function used to calculate the new stream value\n * from the dependencies\n * @return {stream} the created stream\n */\nfunction createDependentStream(deps, fn) {\n  var s = createStream();\n  s.fn = fn;\n  s.deps = deps;\n  s.depsMet = false;\n  s.depsChanged = deps.length > 0 ? [] : undefined;\n  s.shouldUpdate = false;\n  addListeners(deps, s);\n  return s;\n}\n\n/**\n * @private\n * Check if all the dependencies have values\n * @param {stream} stream - the stream to check depencencies from\n * @return {Boolean} `true` if all dependencies have vales, `false` otherwise\n */\nfunction initialDependenciesMet(stream) {\n  stream.depsMet = stream.deps.every(function(s) {\n    return s.hasVal;\n  });\n  return stream.depsMet;\n}\n\nfunction dependenciesAreMet(stream) {\n  return stream.depsMet === true || initialDependenciesMet(stream);\n}\n\nfunction isEnded(stream) {\n  return stream.end && stream.end.val === true;\n}\n\nfunction listenersNeedUpdating(s) {\n  return s.listeners.some(function(s) { return s.shouldUpdate; });\n}\n\n/**\n * @private\n * Update a dependent stream using its dependencies in an atomic way\n * @param {stream} stream - the stream to update\n */\nfunction updateStream(s) {\n  if (isEnded(s) || !dependenciesAreMet(s)) return;\n  if (inStream !== undefined) {\n    updateLaterUsing(updateStream, s);\n    return;\n  }\n  inStream = s;\n  if (s.depsChanged) s.fnArgs[s.fnArgs.length - 1] = s.depsChanged;\n  var returnVal = s.fn.apply(s.fn, s.fnArgs);\n  if (returnVal !== undefined) {\n    s(returnVal);\n  }\n  inStream = undefined;\n  if (s.depsChanged !== undefined) s.depsChanged = [];\n  s.shouldUpdate = false;\n  if (flushing() === false) flushUpdate();\n  if (listenersNeedUpdating(s)) {\n    if (!flushingStreamValue) s(s.val)\n    else {\n      s.listeners.forEach(function(listener) {\n        if (listener.shouldUpdate) updateLaterUsing(updateStream, listener);\n      });\n    }\n  }\n}\n\n/**\n * @private\n * Update the dependencies of a stream\n * @param {stream} stream\n */\nfunction updateListeners(s) {\n  var i, o, list\n  var listeners = s.listeners;\n  for (i = 0; i < listeners.length; ++i) {\n    list = listeners[i];\n    if (list.end === s) {\n      endStream(list);\n    } else {\n      if (list.depsChanged !== undefined) list.depsChanged.push(s);\n      list.shouldUpdate = true;\n      findDeps(list);\n    }\n  }\n  for (; orderNextIdx >= 0; --orderNextIdx) {\n    o = order[orderNextIdx];\n    if (o.shouldUpdate === true) updateStream(o);\n    o.queued = false;\n  }\n}\n\n/**\n * @private\n * Add stream dependencies to the global `order` queue.\n * @param {stream} stream\n * @see updateDeps\n */\nfunction findDeps(s) {\n  var i\n  var listeners = s.listeners;\n  if (s.queued === false) {\n    s.queued = true;\n    for (i = 0; i < listeners.length; ++i) {\n      findDeps(listeners[i]);\n    }\n    order[++orderNextIdx] = s;\n  }\n}\n\nfunction updateLaterUsing(updater, stream) {\n  toUpdate.push(stream);\n  stream.updaters.push(updater);\n  stream.shouldUpdate = true;\n}\n\n/**\n * @private\n */\nfunction flushUpdate() {\n  flushingUpdateQueue = true;\n  while (toUpdate.length > 0) {\n    var stream = toUpdate.shift();\n    var nextUpdateFn = stream.updaters.shift();\n    if (nextUpdateFn && stream.shouldUpdate) nextUpdateFn(stream);\n  }\n  flushingUpdateQueue = false;\n}\n\n/**\n * @private\n * Push down a value into a stream\n * @param {stream} stream\n * @param {*} value\n */\nfunction updateStreamValue(n, s) {\n  s.val = n;\n  s.hasVal = true;\n  if (inStream === undefined) {\n    flushingStreamValue = true;\n    updateListeners(s);\n    if (toUpdate.length > 0) flushUpdate();\n    flushingStreamValue = false;\n  } else if (inStream === s) {\n    markListeners(s, s.listeners);\n  } else {\n    updateLaterUsing(function(s) { updateStreamValue(n, s); }, s);\n  }\n}\n\n/**\n * @private\n */\nfunction markListeners(s, lists) {\n  var i, list;\n  for (i = 0; i < lists.length; ++i) {\n    list = lists[i];\n    if (list.end !== s) {\n      if (list.depsChanged !== undefined) {\n        list.depsChanged.push(s);\n      }\n      list.shouldUpdate = true;\n    } else {\n      endStream(list);\n    }\n  }\n}\n\n/**\n * @private\n * Add dependencies to a stream\n * @param {Array<stream>} dependencies\n * @param {stream} stream\n */\nfunction addListeners(deps, s) {\n  for (var i = 0; i < deps.length; ++i) {\n    deps[i].listeners.push(s);\n  }\n}\n\n/**\n * @private\n * Removes an stream from a dependency array\n * @param {stream} stream\n * @param {Array<stream>} dependencies\n */\nfunction removeListener(s, listeners) {\n  var idx = listeners.indexOf(s);\n  listeners[idx] = listeners[listeners.length - 1];\n  listeners.length--;\n}\n\n/**\n * @private\n * Detach a stream from its dependencies\n * @param {stream} stream\n */\nfunction detachDeps(s) {\n  for (var i = 0; i < s.deps.length; ++i) {\n    removeListener(s, s.deps[i].listeners);\n  }\n  s.deps.length = 0;\n}\n\n/**\n * @private\n * Ends a stream\n */\nfunction endStream(s) {\n  if (s.deps !== undefined) detachDeps(s);\n  if (s.end !== undefined) detachDeps(s.end);\n}\n\n/**\n * @private\n */\n/**\n * @private\n * transducer stream transformer\n */\nfunction StreamTransformer() { }\nStreamTransformer.prototype['@@transducer/init'] = function() { };\nStreamTransformer.prototype['@@transducer/result'] = function() { };\nStreamTransformer.prototype['@@transducer/step'] = function(s, v) { return v; };\n\nmodule.exports = flyd;\n","const e=Object.assign||((e,t)=>(t&&Object.keys(t).forEach(o=>e[o]=t[o]),e)),t=(e,r,s)=>{const c=typeof s;if(s&&\"object\"===c)if(Array.isArray(s))for(const o of s)r=t(e,r,o);else for(const c of Object.keys(s)){const f=s[c];\"function\"==typeof f?r[c]=f(r[c],o):void 0===f?e&&!isNaN(c)?r.splice(c,1):delete r[c]:null===f||\"object\"!=typeof f||Array.isArray(f)?r[c]=f:\"object\"==typeof r[c]?r[c]=f===r[c]?f:o(r[c],f):r[c]=t(!1,{},f)}else\"function\"===c&&(r=s(r,o));return r},o=(o,...r)=>{const s=Array.isArray(o);return t(s,s?o.slice():e({},o),r)};export default o;\n//# sourceMappingURL=mergerino.min.js.map","import flyd from \"flyd\";\nimport merge from \"mergerino\";\n\nconst { stream, scan } = flyd;\n\nexport type FunctionPatch<T> = (state: T) => T;\nexport type Patch<T> = FunctionPatch<T> | Partial<T>;\n\nexport type Stream<T> = flyd.Stream<T>;\n\nexport type Store<T> = Stream<T> & {\n  update: Stream<Patch<T>>;\n};\n\nexport const store = <T extends object>(initial: T): Store<T> => {\n  const update = stream<Patch<T>>();\n  const states = scan(\n    (state: T, patch: Patch<T>): T => merge(state, patch),\n    initial,\n    update\n  );\n\n  return Object.assign(states, { update });;\n};\n","import { render, html } from \"uhtml\";\nimport css from \"plain-tag\";\nimport type { Store, Stream, Patch } from \"./state\";\nimport { store } from \"./state\";\n\ninterface Ref<T extends HTMLElement> {\n  current: T | null\n}\n\n/**\n * Creates a reference to be used in templates.\n * If an element has a `ref=${my_ref}` attribute in a template, the\n * `my_ref.current` will be set to that element once it's rendered.\n */\nconst ref = <T extends HTMLElement>(): Ref<T> => ({ current: null });\n\ntype Slots = { default: Node[] } & { [key: string]: Node }\n\ntype CustomHandlers = Record<\n  `handle_${keyof HTMLElementEventMap}`,\n  EventListener\n>;\n\ninterface Definition extends HTMLElement, Partial<CustomHandlers> {\n  /**\n   * Invoked each time the custom element is appended into a document-connected\n   * element. This will happen each time the node is moved, and may happen\n   * before the element's contents have been fully parsed.\n   */\n  connected?(): void;\n\n  /**\n   * Invoked each time the custom element is disconnected from the document's\n   * DOM.\n   */\n  disconnected?(): void;\n\n  /**\n   * Invoked *after* the component is connected and guarantees the element's\n   * contents hev been fully parsed. At this point `refs` and `this.slots`\n   * should work properly.\n   */\n  ready?(): void;\n\n  /**\n   * Invoked every time a store is updated or an attribute changes.\n   */\n  update?(): any;\n\n  /**\n   * Invoked right after a component update. The returned value will be\n   * used to render the component's contents.\n   */\n  render?(): ReturnType<typeof html>;\n\n  handleEvent(event: Event): void;\n\n  /**\n   * Subscribes to a store.\n   * Store updates will trigger a component update. If multiple consecutive\n   * store updates happen, a single component update is guaranteed to be run\n   * in the next microtask.\n   */\n  useStore<T>(store: Store<T>): Store<T>;\n\n  /**\n   * Holds a map of slots found in the element's dom once it's ready.\n   *\n   * Consider the following markup:\n   * ```html\n   * <my-element>\n   *   Hello world!\n   *   <button slot=\"action\">Press me!</button>\n   *   <p>I'm a paragraph!</p>\n   * </my-element>\n   * ```\n   * The element's `this.slots` will look like this:\n   * ```js\n   * {\n   *   default: [\n   *     #text \"Hello world!\"\n   *     <p>I'm a paragraph!</p>\n   *   ],\n   *   action: <button slot=\"action\">Press me!</button>\n   * }\n   * ```\n   */\n  readonly slots: Slots;\n};\n\ninterface DefinitionConstructor {\n  new(...params: any[]): Definition;\n  css?(tag: string): string;\n}\n\n/**\n * Tricks typescript so it doesn't complain if you use methods that are added\n * while defining the component.\n *\n * @param superclass The base class to extend, defaults to `HTMLElement`\n */\nconst Component = <T extends CustomElementConstructor>(superclass: T = HTMLElement as T): DefinitionConstructor => {\n  return superclass as unknown as DefinitionConstructor;\n}\n\nconst active_streams = new WeakMap<object, Stream<any>[]>();\nconst ready_elements = new WeakSet();\nlet updates_schedule = new Set<Definition>();\n\n/**\n * Defines a custom element component. I will create the definition only once,\n * so subsequent attempts to define an already defined element will result in a\n * noop.\n *\n * @param tag The custom element tag\n * @param definition The custom element definition\n * @param opts\n */\nconst define = (tag: string, definition: DefinitionConstructor, opts: ElementDefinitionOptions = {}): DefinitionConstructor => {\n\n  const Class = class extends definition {\n    connectedCallback() {\n      if (super.connected) super.connected();\n\n      this.dispatchEvent(new CustomEvent(\"connected\"));\n\n      setTimeout(() => this.ready());\n    }\n\n    ready() {\n      load_slots(this);\n\n      if (super.ready) {\n        super.ready();\n      }\n\n      ready_elements.add(this)\n\n      this.dispatchEvent(new CustomEvent(\"ready\"));\n\n      schedule_update(this);\n    }\n\n    disconnectedCallback() {\n      active_streams.get(this)?.forEach(stream => {\n        stream.end(true);\n      });\n\n      active_streams.delete(this);\n      ready_elements.delete(this);\n\n      if (super.disconnected) {\n        super.disconnected();\n      }\n\n      this.dispatchEvent(new CustomEvent(\"disconnected\"));\n    }\n\n    update() {\n      if (super.update)\n        super.update();\n\n      this.dispatchEvent(new CustomEvent(\"updated\"));\n\n      this.performRender();\n    }\n\n    performRender() {\n      if (super.render) {\n        render(this, super.render());\n      }\n\n      this.dispatchEvent(new CustomEvent(\"rendered\"));\n    }\n\n    handleEvent(event: Event) {\n      /* istanbul ignore next */\n      Reflect.get(this, `handle_${event.type}`)(event);\n    }\n\n    useStore<T>(store: Store<T>): Store<T> {\n      return useStore(this, store);\n    }\n  };\n\n  if (!customElements.get(tag)) customElements.define(tag, Class, opts)\n\n  if (definition.css) {\n    const style = document.createElement(\"style\");\n    const selector = opts.extends ? `${opts.extends}[is=${tag}]` : tag;\n    style.textContent = definition.css(selector);\n    document.head.appendChild(style);\n  }\n\n  return Class;\n}\n\nconst run_schedule = () => {\n  const previous = updates_schedule;\n  updates_schedule = new Set();\n  previous.forEach(element => {\n    element.update?.();\n  });\n}\n\nconst schedule_update = (element: Definition) => {\n  /* instanbul ignore else */\n  if (!updates_schedule.has(element)) {\n    updates_schedule.add(element);\n\n    /* instanbul ignore else */\n    if (updates_schedule.size === 1) {\n      wait(run_schedule);\n    }\n  }\n}\n\nconst wait = (callback: Function) => {\n  (window.queueMicrotask)\n    ? window.queueMicrotask(callback as VoidFunction)\n    : new Promise<void>(r => r()).then(callback as VoidFunction);\n}\n\n/**\n * Holds the elements that have already loaded their slots.\n * The connected callback runs when the node is first discovered and also when\n * it's moved, so we shouhld only load slots the first time. This also avoids\n * the `Failed to execute 'insertBefore' on 'Node': The node before which the\n * new node is to be inserted is not a child of this node` error thrown by uhtml\n * when we reload slots after moving the element and trying to rerender\n * afterwards. I'm not sure if this is a uhtml bug or my own stupidity.\n */\nconst ready_slots = new WeakSet();\nconst load_slots = (element: Definition) => {\n  // Find slots\n  if (!ready_slots.has(element)) {\n    const slots = get_slots_in(element);\n    Reflect.set(element, \"slots\", slots);\n    ready_slots.add(element);\n  }\n}\n\nconst get_slots_in = (element: Node): Slots => {\n  let default_slots: Node[] = [];\n  let slots: Record<string, Node> = {};\n  for (let el of Array.from(element.childNodes)) {\n    if (el instanceof HTMLTemplateElement) return get_slots_in(el.content);\n\n    const slotName = (el instanceof Element) ? el.getAttribute('slot') : null;\n\n    if (slotName) {\n      slots[slotName] = el\n    } else {\n      default_slots.push(el);\n    }\n  };\n\n  return { default: default_slots, ...slots } as Slots;\n}\n\n/**\n * Subscribe to changes in the store state and triggers a component update.\n * Subscriptions are cleaned up when the component is disconnected.\n */\nconst useStore = <T>(element: Definition, store: Store<T>): Store<T> => {\n  const streams = active_streams.get(element) || [];\n  const updater = store.map(() => {\n    // Only update the component once it's ready, otherwise we will trigger an\n    // update if we're subscribing in a connected or ready callback.\n    if (ready_elements.has(element)) schedule_update(element);\n  });\n  streams.push(updater);\n  active_streams.set(element, streams);\n\n  return store;\n}\n\nexport { Component, define, css, html, ref, store, useStore };\nexport type { Patch, Ref, Store, Stream };\n"],"names":["_","get","key","set","value","attr","empty","node","notNode","selfClosing","trimEnd","isNode","template","i","test","regular","original","name","extra","replace","prefix","svg","text","length","chunk","push","$1","$2","output","join","trim","isArray","Array","indexOf","slice","ELEMENT_NODE","nodeType","remove","firstChild","lastChild","range","document","createRange","setStartAfter","setEndAfter","deleteContents","diffable","operation","valueOf","persistent","fragment","childNodes","nodes","call","appendChild","parentNode","a","b","before","bLength","aEnd","bEnd","aStart","bStart","map","nextSibling","insertBefore","has","removeChild","Map","index","sequence","replaceChild","aria","values","removeAttribute","setAttribute","attribute","oldValue","orphan","attributeNode","createAttributeNS","newValue","removeAttributeNode","setAttributeNodeNS","data","dataset","event","type","toLowerCase","info","removeEventListener","addEventListener","ref","current","setter","textContent","createContent","FRAGMENT","TEMPLATE","HAS_CONTENT","create","createHTML","html","innerHTML","content","selector","RegExp","querySelectorAll","append","markup","createSVG","root","element","createDocumentFragment","createElementNS","reducePath","createPath","path","createTreeWalker","importNode","isImportNodeLengthWrong","createFragment","createWalker","diff","comment","oldNodes","newNodes","udomdiff","handleAnything","anyContent","createTextNode","String","handleAttribute","handlers","options","reduceRight","cache","umap","WeakMap","createCache","stack","entry","wire","createEntry","mapUpdates","updates","mapTemplate","instrument","tw","search","nextNode","hasAttribute","getAttribute","tagName","unroll","unrollValues","hole","Hole","splice","Object","defineProperties","tag","keyed","fixed","id","memo","render","where","what","t","s","l","arguments","_arity","n","fn","apply","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","Error","_isPlaceholder","_curry1","f1","_curry2","f2","_b","_a","_curryN","received","combined","argsIdx","left","combinedIdx","result","curryN","isFunction","obj","constructor","trueFn","toUpdate","inStream","order","orderNextIdx","flushingUpdateQueue","flushingStreamValue","flushing","flyd","stream","initialValue","endStream","createDependentStream","createStream","end","fnArgs","listeners","of","combine","streams","deps","depEndStreams","undefined","depsChanged","concat","addListeners","updateStream","isStream","immediate","depsMet","endsOn","endS","detachDeps","f","self","val","chain","ap","on","scan","acc","ns","hasVal","merge","s1","s2","changed","transduce","xform","source","StreamTransformer","res","boundMap","operator_pipe","boundChain","flatEnd","internalEnded","alive","last","flatStream","own","newS","fromPromise","p","then","flattenPromise","boundAp","fantasy_land_ap","streamToString","updateStreamValue","updaters","queued","pipe","toJSON","toString","shouldUpdate","initialDependenciesMet","every","dependenciesAreMet","isEnded","listenersNeedUpdating","some","updateLaterUsing","returnVal","flushUpdate","forEach","listener","updateListeners","o","list","findDeps","updater","shift","nextUpdateFn","markListeners","lists","removeListener","idx","prototype","v","e","assign","keys","r","c","isNaN","store","initial","update","states","state","patch","Component","superclass","HTMLElement","active_streams","ready_elements","WeakSet","updates_schedule","Set","define","definition","opts","Class","dispatchEvent","CustomEvent","setTimeout","ready","load_slots","add","schedule_update","performRender","Reflect","useStore","customElements","css","style","createElement","head","run_schedule","previous","size","wait","callback","window","queueMicrotask","Promise","ready_slots","slots","get_slots_in","default_slots","from","el","HTMLTemplateElement","slotName","Element"],"mappings":"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"}