{"version":3,"file":"state.modern.js","sources":["../node_modules/ramda/src/internal/_arity.js","../node_modules/ramda/src/internal/_isPlaceholder.js","../node_modules/ramda/src/internal/_curry1.js","../node_modules/ramda/src/internal/_curryN.js","../node_modules/ramda/src/internal/_curry2.js","../node_modules/ramda/src/curryN.js","../node_modules/flyd/lib/index.js","../node_modules/mergerino/dist/mergerino.min.js","../src/state.ts"],"sourcesContent":["function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.apply(this, arguments);\n      };\n    case 1:\n      return function (a0) {\n        return fn.apply(this, arguments);\n      };\n    case 2:\n      return function (a0, a1) {\n        return fn.apply(this, arguments);\n      };\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.apply(this, arguments);\n      };\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.apply(this, arguments);\n      };\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.apply(this, arguments);\n      };\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.apply(this, arguments);\n      };\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.apply(this, arguments);\n      };\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.apply(this, arguments);\n      };\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.apply(this, arguments);\n      };\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.apply(this, arguments);\n      };\n    default:\n      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n}\nmodule.exports = _arity;","function _isPlaceholder(a) {\n       return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}\nmodule.exports = _isPlaceholder;","var _isPlaceholder = /*#__PURE__*/require('./_isPlaceholder');\n\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}\nmodule.exports = _curry1;","var _arity = /*#__PURE__*/require('./_arity');\n\nvar _isPlaceholder = /*#__PURE__*/require('./_isPlaceholder');\n\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n      combined[combinedIdx] = result;\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n      combinedIdx += 1;\n    }\n    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n  };\n}\nmodule.exports = _curryN;","var _curry1 = /*#__PURE__*/require('./_curry1');\n\nvar _isPlaceholder = /*#__PURE__*/require('./_isPlaceholder');\n\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n}\nmodule.exports = _curry2;","var _arity = /*#__PURE__*/require('./internal/_arity');\n\nvar _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _curryN = /*#__PURE__*/require('./internal/_curryN');\n\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      var sumArgs = (...args) => R.sum(args);\n *\n *      var curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n */\n\n\nvar curryN = /*#__PURE__*/_curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n  return _arity(length, _curryN(length, [], fn));\n});\nmodule.exports = curryN;","'use strict';\n\nvar curryN = require('ramda/src/curryN');\n\n// Utility\nfunction isFunction(obj) {\n  return !!(obj && obj.constructor && obj.call && obj.apply);\n}\nfunction trueFn() { return true; }\n\n// Globals\nvar toUpdate = [];\nvar inStream;\nvar order = [];\nvar orderNextIdx = -1;\nvar flushingUpdateQueue = false;\nvar flushingStreamValue = false;\n\nfunction flushing() {\n  return flushingUpdateQueue || flushingStreamValue;\n}\n\n\n/** @namespace */\nvar flyd = {}\n\n// /////////////////////////// API ///////////////////////////////// //\n\n/**\n * Creates a new stream\n *\n * __Signature__: `a -> Stream a`\n *\n * @name flyd.stream\n * @param {*} initialValue - (Optional) the initial value of the stream\n * @return {stream} the stream\n *\n * @example\n * var n = flyd.stream(1); // Stream with initial value `1`\n * var s = flyd.stream(); // Stream with no initial value\n */\nflyd.stream = function(initialValue) {\n  var endStream = createDependentStream([], trueFn);\n  var s = createStream();\n  s.end = endStream;\n  s.fnArgs = [];\n  endStream.listeners.push(s);\n  if (arguments.length > 0) s(initialValue);\n  return s;\n}\n// fantasy-land Applicative\nflyd.stream['fantasy-land/of'] = flyd.stream.of = flyd.stream;\n\n\n/**\n * Create a new dependent stream\n *\n * __Signature__: `(...Stream * -> Stream b -> b) -> [Stream *] -> Stream b`\n *\n * @name flyd.combine\n * @param {Function} fn - the function used to combine the streams\n * @param {Array<stream>} dependencies - the streams that this one depends on\n * @return {stream} the dependent stream\n *\n * @example\n * var n1 = flyd.stream(0);\n * var n2 = flyd.stream(0);\n * var max = flyd.combine(function(n1, n2, self, changed) {\n *   return n1() > n2() ? n1() : n2();\n * }, [n1, n2]);\n */\nflyd.combine = curryN(2, combine);\nfunction combine(fn, streams) {\n  var i, s, deps, depEndStreams;\n  var endStream = createDependentStream([], trueFn);\n  deps = []; depEndStreams = [];\n  for (i = 0; i < streams.length; ++i) {\n    if (streams[i] !== undefined) {\n      deps.push(streams[i]);\n      if (streams[i].end !== undefined) depEndStreams.push(streams[i].end);\n    }\n  }\n  s = createDependentStream(deps, fn);\n  s.depsChanged = [];\n  s.fnArgs = s.deps.concat([s, s.depsChanged]);\n  s.end = endStream;\n  endStream.listeners.push(s);\n  addListeners(depEndStreams, endStream);\n  endStream.deps = depEndStreams;\n  updateStream(s);\n  return s;\n}\n\n/**\n * Returns `true` if the supplied argument is a Flyd stream and `false` otherwise.\n *\n * __Signature__: `* -> Boolean`\n *\n * @name flyd.isStream\n * @param {*} value - the value to test\n * @return {Boolean} `true` if is a Flyd streamn, `false` otherwise\n *\n * @example\n * var s = flyd.stream(1);\n * var n = 1;\n * flyd.isStream(s); //=> true\n * flyd.isStream(n); //=> false\n */\nflyd.isStream = function(stream) {\n  return isFunction(stream) && 'hasVal' in stream;\n}\n\n/**\n * Invokes the body (the function to calculate the value) of a dependent stream\n *\n * By default the body of a dependent stream is only called when all the streams\n * upon which it depends has a value. `immediate` can circumvent this behaviour.\n * It immediately invokes the body of a dependent stream.\n *\n * __Signature__: `Stream a -> Stream a`\n *\n * @name flyd.immediate\n * @param {stream} stream - the dependent stream\n * @return {stream} the same stream\n *\n * @example\n * var s = flyd.stream();\n * var hasItems = flyd.immediate(flyd.combine(function(s) {\n *   return s() !== undefined && s().length > 0;\n * }, [s]);\n * console.log(hasItems()); // logs `false`. Had `immediate` not been\n *                          // used `hasItems()` would've returned `undefined`\n * s([1]);\n * console.log(hasItems()); // logs `true`.\n * s([]);\n * console.log(hasItems()); // logs `false`.\n */\nflyd.immediate = function(s) {\n  if (s.depsMet === false) {\n    s.depsMet = true;\n    updateStream(s);\n  }\n  return s;\n}\n\n/**\n * Changes which `endsStream` should trigger the ending of `s`.\n *\n * __Signature__: `Stream a -> Stream b -> Stream b`\n *\n * @name flyd.endsOn\n * @param {stream} endStream - the stream to trigger the ending\n * @param {stream} stream - the stream to be ended by the endStream\n * @param {stream} the stream modified to be ended by endStream\n *\n * @example\n * var n = flyd.stream(1);\n * var killer = flyd.stream();\n * // `double` ends when `n` ends or when `killer` emits any value\n * var double = flyd.endsOn(flyd.merge(n.end, killer), flyd.combine(function(n) {\n *   return 2 * n();\n * }, [n]);\n*/\nflyd.endsOn = function(endS, s) {\n  detachDeps(s.end);\n  endS.listeners.push(s.end);\n  s.end.deps.push(endS);\n  return s;\n}\n\n/**\n * Map a stream\n *\n * Returns a new stream consisting of every value from `s` passed through\n * `fn`. I.e. `map` creates a new stream that listens to `s` and\n * applies `fn` to every new value.\n * __Signature__: `(a -> result) -> Stream a -> Stream result`\n *\n * @name flyd.map\n * @param {Function} fn - the function that produces the elements of the new stream\n * @param {stream} stream - the stream to map\n * @return {stream} a new stream with the mapped values\n *\n * @example\n * var numbers = flyd.stream(0);\n * var squaredNumbers = flyd.map(function(n) { return n*n; }, numbers);\n */\n// Library functions use self callback to accept (null, undefined) update triggers.\nfunction map(f, s) {\n  return combine(function(s, self) { self(f(s.val)); }, [s]);\n}\nflyd.map = curryN(2, map)\n\n/**\n * Chain a stream\n *\n * also known as flatMap\n *\n * Where `fn` returns a stream this function will flatten the resulting streams.\n * Every time `fn` is called the context of the returned stream will \"switch\" to that stream.\n *\n * __Signature__: `(a -> Stream b) -> Stream a -> Stream b`\n *\n * @name flyd.chain\n * @param {Function} fn - the function that produces the streams to be flattened\n * @param {stream} stream - the stream to map\n * @return {stream} a new stream with the mapped values\n *\n * @example\n * var filter = flyd.stream('who');\n * var items = flyd.chain(function(filter){\n *   return flyd.stream(findUsers(filter));\n * }, filter);\n */\nflyd.chain = curryN(2, chain);\n\n/**\n * Apply a stream\n *\n * Applies the value in `s2` to the function in `s1`.\n *\n * __Signature__: `Stream (a -> b) -> Stream a -> Stream b`\n *\n * @name flyd.ap\n * @param {stream} s1 - The value to be applied\n * @param {stream} s2 - The function expecting the value\n * @return {stream} a new stream with the mapped values\n *\n * @example\n * var add = stream(a => b => a + b)\n * var n1 = stream(1)\n * var n2 = stream(2)\n *\n * var added = flyd.ap(n2, flyd.ap(n1, add)) // stream(3)\n * // can also be written using pipe\n * var added_pipe = add\n *   .pipe(ap(n1))\n *   .pipe(ap(n2));\n * added_pipe() // 3\n */\nflyd.ap = curryN(2, ap);\n\n/**\n * Listen to stream events\n *\n * Similar to `map` except that the returned stream is empty. Use `on` for doing\n * side effects in reaction to stream changes. Use the returned stream only if you\n * need to manually end it.\n *\n * __Signature__: `(a -> result) -> Stream a -> Stream undefined`\n *\n * @name flyd.on\n * @param {Function} cb - the callback\n * @param {stream} stream - the stream\n * @return {stream} an empty stream (can be ended)\n */\nflyd.on = curryN(2, function(f, s) {\n  return combine(function(s) { f(s.val); }, [s]);\n})\n\n/**\n * Creates a new stream with the results of calling the function on every incoming\n * stream with and accumulator and the incoming value.\n *\n * __Signature__: `(a -> b -> a) -> a -> Stream b -> Stream a`\n *\n * @name flyd.scan\n * @param {Function} fn - the function to call\n * @param {*} val - the initial value of the accumulator\n * @param {stream} stream - the stream source\n * @return {stream} the new stream\n *\n * @example\n * var numbers = flyd.stream();\n * var sum = flyd.scan(function(sum, n) { return sum+n; }, 0, numbers);\n * numbers(2)(3)(5);\n * sum(); // 10\n */\nflyd.scan = curryN(3, function(f, acc, s) {\n  var ns = combine(function(s, self) {\n    self(acc = f(acc, s.val));\n  }, [s]);\n  if (!ns.hasVal) ns(acc);\n  return ns;\n});\n\n/**\n * Creates a new stream down which all values from both `stream1` and `stream2`\n * will be sent.\n *\n * __Signature__: `Stream a -> Stream a -> Stream a`\n *\n * @name flyd.merge\n * @param {stream} source1 - one stream to be merged\n * @param {stream} source2 - the other stream to be merged\n * @return {stream} a stream with the values from both sources\n *\n * @example\n * var btn1Clicks = flyd.stream();\n * button1Elm.addEventListener(btn1Clicks);\n * var btn2Clicks = flyd.stream();\n * button2Elm.addEventListener(btn2Clicks);\n * var allClicks = flyd.merge(btn1Clicks, btn2Clicks);\n */\nflyd.merge = curryN(2, function(s1, s2) {\n  var s = flyd.immediate(combine(function(s1, s2, self, changed) {\n    if (changed[0]) {\n      self(changed[0]());\n    } else if (s1.hasVal) {\n      self(s1.val);\n    } else if (s2.hasVal) {\n      self(s2.val);\n    }\n  }, [s1, s2]));\n  flyd.endsOn(combine(function() {\n    return true;\n  }, [s1.end, s2.end]), s);\n  return s;\n});\n\n/**\n * Creates a new stream resulting from applying `transducer` to `stream`.\n *\n * __Signature__: `Transducer -> Stream a -> Stream b`\n *\n * @name flyd.transduce\n * @param {Transducer} xform - the transducer transformation\n * @param {stream} source - the stream source\n * @return {stream} the new stream\n *\n * @example\n * var t = require('transducers.js');\n *\n * var results = [];\n * var s1 = flyd.stream();\n * var tx = t.compose(t.map(function(x) { return x * 2; }), t.dedupe());\n * var s2 = flyd.transduce(tx, s1);\n * flyd.combine(function(s2) { results.push(s2()); }, [s2]);\n * s1(1)(1)(2)(3)(3)(3)(4);\n * results; // => [2, 4, 6, 8]\n */\nflyd.transduce = curryN(2, function(xform, source) {\n  xform = xform(new StreamTransformer());\n  return combine(function(source, self) {\n    var res = xform['@@transducer/step'](undefined, source.val);\n    if (res && res['@@transducer/reduced'] === true) {\n      self.end(true);\n      return res['@@transducer/value'];\n    } else {\n      return res;\n    }\n  }, [source]);\n});\n\n/**\n * Returns `fn` curried to `n`. Use this function to curry functions exposed by\n * modules for Flyd.\n *\n * @name flyd.curryN\n * @function\n * @param {Integer} arity - the function arity\n * @param {Function} fn - the function to curry\n * @return {Function} the curried function\n *\n * @example\n * function add(x, y) { return x + y; };\n * var a = flyd.curryN(2, add);\n * a(2)(4) // => 6\n */\nflyd.curryN = curryN\n\n/**\n * Returns a new stream identical to the original except every\n * value will be passed through `f`.\n *\n * _Note:_ This function is included in order to support the fantasy land\n * specification.\n *\n * __Signature__: Called bound to `Stream a`: `(a -> b) -> Stream b`\n *\n * @name stream.map\n * @param {Function} function - the function to apply\n * @return {stream} a new stream with the values mapped\n *\n * @example\n * var numbers = flyd.stream(0);\n * var squaredNumbers = numbers.map(function(n) { return n*n; });\n */\nfunction boundMap(f) { return map(f, this); }\n\n/**\n * Returns the result of applying function `fn` to this stream\n *\n * __Signature__: Called bound to `Stream a`: `(a -> Stream b) -> Stream b`\n *\n * @name stream.pipe\n * @param {Function} fn - the function to apply\n * @return {stream} A new stream\n *\n * @example\n * var numbers = flyd.stream(0);\n * var squaredNumbers = numbers.pipe(flyd.map(function(n){ return n*n; }));\n */\nfunction operator_pipe(f) { return f(this) }\n\nfunction boundChain(f) {\n  return chain(f, this);\n}\n\nfunction chain(f, s) {\n  // Internal state to end flat map stream\n  var flatEnd = flyd.stream(1);\n  var internalEnded = flyd.on(function() {\n    var alive = flatEnd() - 1;\n    flatEnd(alive);\n    if (alive <= 0) {\n      flatEnd.end(true);\n    }\n  });\n\n  internalEnded(s.end);\n  var last = flyd.stream();\n  var flatStream = flyd.combine(function(s, own) {\n    last.end(true)\n    // Our fn stream makes streams\n    var newS = f(s());\n    flatEnd(flatEnd() + 1);\n    internalEnded(newS.end);\n\n    // Update self on call -- newS is never handed out so deps don't matter\n    last = map(own, newS);\n  }, [s]);\n\n  flyd.endsOn(flatEnd.end, flatStream);\n\n  return flatStream;\n}\n\nflyd.fromPromise = function fromPromise(p) {\n  var s = flyd.stream();\n  p.then(function(val) {\n    s(val);\n    s.end(true);\n  });\n  return s;\n}\n\nflyd.flattenPromise = function flattenPromise(s) {\n  return combine(function(s, self) {\n    s().then(self);\n  }, [s])\n}\n\n\n/**\n * Returns a new stream which is the result of applying the\n * functions from `this` stream to the values in `stream` parameter.\n *\n * `this` stream must be a stream of functions.\n *\n * _Note:_ This function is included in order to support the fantasy land\n * specification.\n *\n * __Signature__: Called bound to `Stream (a -> b)`: `a -> Stream b`\n *\n * @name stream.ap\n * @param {stream} stream - the values stream\n * @return {stream} a new stream with the functions applied to values\n *\n * @example\n * var add = flyd.curryN(2, function(x, y) { return x + y; });\n * var numbers1 = flyd.stream();\n * var numbers2 = flyd.stream();\n * var addToNumbers1 = flyd.map(add, numbers1);\n * var added = addToNumbers1.ap(numbers2);\n */\nfunction ap(s2, s1) {\n  return combine(function(s1, s2, self) { self(s1.val(s2.val)); }, [s1, s2]);\n}\n\nfunction boundAp(s2) {\n  return ap(s2, this);\n}\n\n/**\n * @private\n */\nfunction fantasy_land_ap(s1) {\n  return ap(this, s1);\n}\n\n/**\n * Get a human readable view of a stream\n * @name stream.toString\n * @return {String} the stream string representation\n */\nfunction streamToString() {\n  return 'stream(' + this.val + ')';\n}\n\n/**\n * @name stream.end\n * @memberof stream\n * A stream that emits `true` when the stream ends. If `true` is pushed down the\n * stream the parent stream ends.\n */\n\n/**\n * @name stream.of\n * @function\n * @memberof stream\n * Returns a new stream with `value` as its initial value. It is identical to\n * calling `flyd.stream` with one argument.\n *\n * __Signature__: Called bound to `Stream (a)`: `b -> Stream b`\n *\n * @param {*} value - the initial value\n * @return {stream} the new stream\n *\n * @example\n * var n = flyd.stream(1);\n * var m = n.of(1);\n */\n\n// /////////////////////////// PRIVATE ///////////////////////////////// //\n/**\n * @private\n * Create a stream with no dependencies and no value\n * @return {Function} a flyd stream\n */\nfunction createStream() {\n  function s(n) {\n    if (arguments.length === 0) return s.val\n    updateStreamValue(n, s)\n    return s\n  }\n  s.hasVal = false;\n  s.val = undefined;\n  s.updaters = [];\n  s.listeners = [];\n  s.queued = false;\n  s.end = undefined;\n\n  // fantasy-land compatibility\n  s.ap = boundAp;\n  s['fantasy-land/map'] = s.map = boundMap;\n  s['fantasy-land/ap'] = fantasy_land_ap;\n  s['fantasy-land/of'] = s.of = flyd.stream;\n  s['fantasy-land/chain'] = s.chain = boundChain;\n\n  s.pipe = operator_pipe;\n\n  // According to the fantasy-land Applicative specification\n  // Given a value f, one can access its type representative via the constructor property:\n  // `f.constructor.of`\n  s.constructor = flyd.stream;\n\n  s.toJSON = function() {\n    return s.val;\n  }\n  s.toString = streamToString;\n  return s;\n}\n\n/**\n * @private\n * Create a dependent stream\n * @param {Array<stream>} dependencies - an array of the streams\n * @param {Function} fn - the function used to calculate the new stream value\n * from the dependencies\n * @return {stream} the created stream\n */\nfunction createDependentStream(deps, fn) {\n  var s = createStream();\n  s.fn = fn;\n  s.deps = deps;\n  s.depsMet = false;\n  s.depsChanged = deps.length > 0 ? [] : undefined;\n  s.shouldUpdate = false;\n  addListeners(deps, s);\n  return s;\n}\n\n/**\n * @private\n * Check if all the dependencies have values\n * @param {stream} stream - the stream to check depencencies from\n * @return {Boolean} `true` if all dependencies have vales, `false` otherwise\n */\nfunction initialDependenciesMet(stream) {\n  stream.depsMet = stream.deps.every(function(s) {\n    return s.hasVal;\n  });\n  return stream.depsMet;\n}\n\nfunction dependenciesAreMet(stream) {\n  return stream.depsMet === true || initialDependenciesMet(stream);\n}\n\nfunction isEnded(stream) {\n  return stream.end && stream.end.val === true;\n}\n\nfunction listenersNeedUpdating(s) {\n  return s.listeners.some(function(s) { return s.shouldUpdate; });\n}\n\n/**\n * @private\n * Update a dependent stream using its dependencies in an atomic way\n * @param {stream} stream - the stream to update\n */\nfunction updateStream(s) {\n  if (isEnded(s) || !dependenciesAreMet(s)) return;\n  if (inStream !== undefined) {\n    updateLaterUsing(updateStream, s);\n    return;\n  }\n  inStream = s;\n  if (s.depsChanged) s.fnArgs[s.fnArgs.length - 1] = s.depsChanged;\n  var returnVal = s.fn.apply(s.fn, s.fnArgs);\n  if (returnVal !== undefined) {\n    s(returnVal);\n  }\n  inStream = undefined;\n  if (s.depsChanged !== undefined) s.depsChanged = [];\n  s.shouldUpdate = false;\n  if (flushing() === false) flushUpdate();\n  if (listenersNeedUpdating(s)) {\n    if (!flushingStreamValue) s(s.val)\n    else {\n      s.listeners.forEach(function(listener) {\n        if (listener.shouldUpdate) updateLaterUsing(updateStream, listener);\n      });\n    }\n  }\n}\n\n/**\n * @private\n * Update the dependencies of a stream\n * @param {stream} stream\n */\nfunction updateListeners(s) {\n  var i, o, list\n  var listeners = s.listeners;\n  for (i = 0; i < listeners.length; ++i) {\n    list = listeners[i];\n    if (list.end === s) {\n      endStream(list);\n    } else {\n      if (list.depsChanged !== undefined) list.depsChanged.push(s);\n      list.shouldUpdate = true;\n      findDeps(list);\n    }\n  }\n  for (; orderNextIdx >= 0; --orderNextIdx) {\n    o = order[orderNextIdx];\n    if (o.shouldUpdate === true) updateStream(o);\n    o.queued = false;\n  }\n}\n\n/**\n * @private\n * Add stream dependencies to the global `order` queue.\n * @param {stream} stream\n * @see updateDeps\n */\nfunction findDeps(s) {\n  var i\n  var listeners = s.listeners;\n  if (s.queued === false) {\n    s.queued = true;\n    for (i = 0; i < listeners.length; ++i) {\n      findDeps(listeners[i]);\n    }\n    order[++orderNextIdx] = s;\n  }\n}\n\nfunction updateLaterUsing(updater, stream) {\n  toUpdate.push(stream);\n  stream.updaters.push(updater);\n  stream.shouldUpdate = true;\n}\n\n/**\n * @private\n */\nfunction flushUpdate() {\n  flushingUpdateQueue = true;\n  while (toUpdate.length > 0) {\n    var stream = toUpdate.shift();\n    var nextUpdateFn = stream.updaters.shift();\n    if (nextUpdateFn && stream.shouldUpdate) nextUpdateFn(stream);\n  }\n  flushingUpdateQueue = false;\n}\n\n/**\n * @private\n * Push down a value into a stream\n * @param {stream} stream\n * @param {*} value\n */\nfunction updateStreamValue(n, s) {\n  s.val = n;\n  s.hasVal = true;\n  if (inStream === undefined) {\n    flushingStreamValue = true;\n    updateListeners(s);\n    if (toUpdate.length > 0) flushUpdate();\n    flushingStreamValue = false;\n  } else if (inStream === s) {\n    markListeners(s, s.listeners);\n  } else {\n    updateLaterUsing(function(s) { updateStreamValue(n, s); }, s);\n  }\n}\n\n/**\n * @private\n */\nfunction markListeners(s, lists) {\n  var i, list;\n  for (i = 0; i < lists.length; ++i) {\n    list = lists[i];\n    if (list.end !== s) {\n      if (list.depsChanged !== undefined) {\n        list.depsChanged.push(s);\n      }\n      list.shouldUpdate = true;\n    } else {\n      endStream(list);\n    }\n  }\n}\n\n/**\n * @private\n * Add dependencies to a stream\n * @param {Array<stream>} dependencies\n * @param {stream} stream\n */\nfunction addListeners(deps, s) {\n  for (var i = 0; i < deps.length; ++i) {\n    deps[i].listeners.push(s);\n  }\n}\n\n/**\n * @private\n * Removes an stream from a dependency array\n * @param {stream} stream\n * @param {Array<stream>} dependencies\n */\nfunction removeListener(s, listeners) {\n  var idx = listeners.indexOf(s);\n  listeners[idx] = listeners[listeners.length - 1];\n  listeners.length--;\n}\n\n/**\n * @private\n * Detach a stream from its dependencies\n * @param {stream} stream\n */\nfunction detachDeps(s) {\n  for (var i = 0; i < s.deps.length; ++i) {\n    removeListener(s, s.deps[i].listeners);\n  }\n  s.deps.length = 0;\n}\n\n/**\n * @private\n * Ends a stream\n */\nfunction endStream(s) {\n  if (s.deps !== undefined) detachDeps(s);\n  if (s.end !== undefined) detachDeps(s.end);\n}\n\n/**\n * @private\n */\n/**\n * @private\n * transducer stream transformer\n */\nfunction StreamTransformer() { }\nStreamTransformer.prototype['@@transducer/init'] = function() { };\nStreamTransformer.prototype['@@transducer/result'] = function() { };\nStreamTransformer.prototype['@@transducer/step'] = function(s, v) { return v; };\n\nmodule.exports = flyd;\n","const e=Object.assign||((e,t)=>(t&&Object.keys(t).forEach(o=>e[o]=t[o]),e)),t=(e,r,s)=>{const c=typeof s;if(s&&\"object\"===c)if(Array.isArray(s))for(const o of s)r=t(e,r,o);else for(const c of Object.keys(s)){const f=s[c];\"function\"==typeof f?r[c]=f(r[c],o):void 0===f?e&&!isNaN(c)?r.splice(c,1):delete r[c]:null===f||\"object\"!=typeof f||Array.isArray(f)?r[c]=f:\"object\"==typeof r[c]?r[c]=f===r[c]?f:o(r[c],f):r[c]=t(!1,{},f)}else\"function\"===c&&(r=s(r,o));return r},o=(o,...r)=>{const s=Array.isArray(o);return t(s,s?o.slice():e({},o),r)};export default o;\n//# sourceMappingURL=mergerino.min.js.map","import flyd from \"flyd\";\nimport merge from \"mergerino\";\n\nconst { stream, scan } = flyd;\n\nexport type FunctionPatch<T> = (state: T) => T;\nexport type Patch<T> = FunctionPatch<T> | Partial<T>;\n\nexport interface Stream<T> {\n  (): T;\n  (value: T): Stream<T>;\n  map<V>(project: (value: T) => V): Stream<V>;\n  end: Stream<boolean>;\n  val: T;\n}\n\nexport type Store<T> = Stream<T> & {\n  update: Stream<Patch<T>>;\n};\n\nexport const store = <T extends object>(initial: T): Store<T> => {\n  const update = stream<Patch<T>>();\n  const states = scan(\n    (state: T, patch: Patch<T>): T => merge(state, patch),\n    initial,\n    update\n  );\n\n  return Object.assign(states, { update });;\n};\n"],"names":["n","fn","apply","this","arguments","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","Error","a","f1","length","_isPlaceholder","_curryN","received","combined","argsIdx","left","combinedIdx","result","_arity","f2","b","_curry1","_b","_a","_curry2","trueFn","inStream","toUpdate","order","orderNextIdx","flushingUpdateQueue","flushingStreamValue","flyd","combine","streams","i","s","deps","depEndStreams","endStream","createDependentStream","undefined","push","end","depsChanged","fnArgs","concat","listeners","addListeners","updateStream","map","f","self","val","boundMap","operator_pipe","boundChain","chain","flatEnd","stream","internalEnded","on","alive","last","flatStream","own","newS","endsOn","ap","s2","s1","boundAp","fantasy_land_ap","streamToString","createStream","updateStreamValue","hasVal","updaters","queued","of","pipe","constructor","toJSON","toString","depsMet","shouldUpdate","isEnded","every","initialDependenciesMet","dependenciesAreMet","returnVal","flushUpdate","some","listenersNeedUpdating","forEach","listener","updateLaterUsing","findDeps","updater","shift","nextUpdateFn","o","list","updateListeners","lists","markListeners","removeListener","idx","indexOf","detachDeps","StreamTransformer","initialValue","curryN","isStream","obj","call","immediate","endS","scan","acc","ns","merge","changed","transduce","xform","source","res","fromPromise","p","then","flattenPromise","prototype","v","e","Object","assign","t","keys","r","c","Array","isArray","isNaN","splice","slice","store","initial","update","states","state","patch"],"mappings":"AAmDA,MAnDA,SAAgBA,EAAGC,GAEjB,OAAQD,GACN,KAAK,EACH,OAAO,WACL,OAAOC,EAAGC,MAAMC,KAAMC,YAE1B,KAAK,EACH,OAAO,SAAUC,GACf,OAAOJ,EAAGC,MAAMC,KAAMC,YAE1B,KAAK,EACH,OAAO,SAAUC,EAAIC,GACnB,OAAOL,EAAGC,MAAMC,KAAMC,YAE1B,KAAK,EACH,OAAO,SAAUC,EAAIC,EAAIC,GACvB,OAAON,EAAGC,MAAMC,KAAMC,YAE1B,KAAK,EACH,OAAO,SAAUC,EAAIC,EAAIC,EAAIC,GAC3B,OAAOP,EAAGC,MAAMC,KAAMC,YAE1B,KAAK,EACH,OAAO,SAAUC,EAAIC,EAAIC,EAAIC,EAAIC,GAC/B,OAAOR,EAAGC,MAAMC,KAAMC,YAE1B,KAAK,EACH,OAAO,SAAUC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GACnC,OAAOT,EAAGC,MAAMC,KAAMC,YAE1B,KAAK,EACH,OAAO,SAAUC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GACvC,OAAOV,EAAGC,MAAMC,KAAMC,YAE1B,KAAK,EACH,OAAO,SAAUC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAC3C,OAAOX,EAAGC,MAAMC,KAAMC,YAE1B,KAAK,EACH,OAAO,SAAUC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAC/C,OAAOZ,EAAGC,MAAMC,KAAMC,YAE1B,KAAK,GACH,OAAO,SAAUC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GACnD,OAAOb,EAAGC,MAAMC,KAAMC,YAE1B,QACE,MAAM,IAAIW,MAAM,mFChDtB,SAAwBC,GACjB,OAAY,MAALA,GAA0B,iBAANA,IAAoD,IAAlCA,EAAE,+BCWtD,SAAiBf,GACf,OAAO,SAASgB,EAAGD,GACjB,OAAyB,IAArBZ,UAAUc,QAAgBC,EAAeH,GACpCC,EAEAhB,EAAGC,MAAMC,KAAMC,eCD5B,SAASgB,EAAQF,EAAQG,EAAUpB,GACjC,OAAO,WAKL,IAJA,IAAIqB,EAAW,GACXC,EAAU,EACVC,EAAON,EACPO,EAAc,EACXA,EAAcJ,EAASH,QAAUK,EAAUnB,UAAUc,QAAQ,CAClE,IAAIQ,EACAD,EAAcJ,EAASH,UAAYC,EAAeE,EAASI,KAAiBF,GAAWnB,UAAUc,QACnGQ,EAASL,EAASI,IAElBC,EAAStB,UAAUmB,GACnBA,GAAW,GAEbD,EAASG,GAAeC,EACnBP,EAAeO,KAClBF,GAAQ,GAEVC,GAAe,EAEjB,OAAOD,GAAQ,EAAIvB,EAAGC,MAAMC,KAAMmB,GAAYK,EAAOH,EAAMJ,EAAQF,EAAQI,EAAUrB,QCtBzF,SAAiBA,GACf,OAAO,SAAS2B,EAAGZ,EAAGa,GACpB,OAAQzB,UAAUc,QAChB,KAAK,EACH,OAAOU,EACT,KAAK,EACH,OAAOT,EAAeH,GAAKY,EAAKE,EAAQ,SAAUC,GAChD,OAAO9B,EAAGe,EAAGe,KAEjB,QACE,OAAOZ,EAAeH,IAAMG,EAAeU,GAAKD,EAAKT,EAAeH,GAAKc,EAAQ,SAAUE,GACzF,OAAO/B,EAAG+B,EAAIH,KACXV,EAAeU,GAAKC,EAAQ,SAAUC,GACzC,OAAO9B,EAAGe,EAAGe,KACV9B,EAAGe,EAAGa,KCwBOI,CAAQ,SAAgBf,EAAQjB,GACxD,OAAe,IAAXiB,EACKY,EAAQ7B,GAEV0B,EAAOT,EAAQE,EAAQF,EAAQ,GAAIjB,MChD5C,SAASiC,IAAW,OAAO,EAG3B,IACIC,EADAC,EAAW,GAEXC,EAAQ,GACRC,GAAgB,EAChBC,GAAsB,EACtBC,GAAsB,EAQtBC,EAAO,GAgDX,SAASC,EAAQzC,EAAI0C,GACnB,IAAIC,EAAGC,EAAGC,EAAMC,EACZC,EAAYC,EAAsB,GAAIf,GAE1C,IADAY,EAAO,GAAIC,EAAgB,GACtBH,EAAI,EAAGA,EAAID,EAAQzB,SAAU0B,OACbM,IAAfP,EAAQC,KACVE,EAAKK,KAAKR,EAAQC,SACKM,IAAnBP,EAAQC,GAAGQ,KAAmBL,EAAcI,KAAKR,EAAQC,GAAGQ,MAWpE,OARAP,EAAII,EAAsBH,EAAM7C,IAC9BoD,YAAc,GAChBR,EAAES,OAAST,EAAEC,KAAKS,OAAO,CAACV,EAAGA,EAAEQ,cAC/BR,EAAEO,IAAMJ,EACRA,EAAUQ,UAAUL,KAAKN,GACzBY,EAAaV,EAAeC,GAC5BA,EAAUF,KAAOC,EACjBW,EAAab,GACNA,EAkGT,SAASc,EAAIC,EAAGf,GACd,OAAOH,EAAQ,SAASG,EAAGgB,GAAQA,EAAKD,EAAEf,EAAEiB,OAAU,CAACjB,IAuMzD,SAASkB,EAASH,GAAK,OAAOD,EAAIC,EAAGzD,MAerC,SAAS6D,EAAcJ,GAAK,OAAOA,EAAEzD,MAErC,SAAS8D,EAAWL,GAClB,OAAOM,EAAMN,EAAGzD,MAGlB,SAAS+D,EAAMN,EAAGf,GAEhB,IAAIsB,EAAU1B,EAAK2B,OAAO,GACtBC,EAAgB5B,EAAK6B,GAAG,WAC1B,IAAIC,EAAQJ,IAAY,EACxBA,EAAQI,GACJA,GAAS,GACXJ,EAAQf,KAAI,KAIhBiB,EAAcxB,EAAEO,KAChB,IAAIoB,EAAO/B,EAAK2B,SACZK,EAAahC,EAAKC,QAAQ,SAASG,EAAG6B,GACxCF,EAAKpB,KAAI,GAET,IAAIuB,EAAOf,EAAEf,KACbsB,EAAQA,IAAY,GACpBE,EAAcM,EAAKvB,KAGnBoB,EAAOb,EAAIe,EAAKC,IACf,CAAC9B,IAIJ,OAFAJ,EAAKmC,OAAOT,EAAQf,IAAKqB,GAElBA,EAyCT,SAASI,EAAGC,EAAIC,GACd,OAAOrC,EAAQ,SAASqC,EAAID,EAAIjB,GAAQA,EAAKkB,EAAGjB,IAAIgB,EAAGhB,OAAU,CAACiB,EAAID,IAGxE,SAASE,EAAQF,GACf,OAAOD,EAAGC,EAAI3E,MAMhB,SAAS8E,EAAgBF,GACvB,OAAOF,EAAG1E,KAAM4E,GAQlB,SAASG,IACP,MAAO,UAAY/E,KAAK2D,IAAM,IAiChC,SAASqB,IACP,SAAStC,EAAE7C,GACT,OAAyB,IAArBI,UAAUc,OAAqB2B,EAAEiB,KACrCsB,EAAkBpF,EAAG6C,GACdA,GA2BT,OAzBAA,EAAEwC,QAAS,EACXxC,EAAEiB,SAAMZ,EACRL,EAAEyC,SAAW,GACbzC,EAAEW,UAAY,GACdX,EAAE0C,QAAS,EACX1C,EAAEO,SAAMF,EAGRL,EAAEgC,GAAKG,EACPnC,EAAE,oBAAsBA,EAAEc,IAAMI,EAChClB,EAAE,mBAAqBoC,EACvBpC,EAAE,mBAAqBA,EAAE2C,GAAK/C,EAAK2B,OACnCvB,EAAE,sBAAwBA,EAAEqB,MAAQD,EAEpCpB,EAAE4C,KAAOzB,EAKTnB,EAAE6C,YAAcjD,EAAK2B,OAErBvB,EAAE8C,OAAS,WACT,OAAO9C,EAAEiB,KAEXjB,EAAE+C,SAAWV,EACNrC,EAWT,SAASI,EAAsBH,EAAM7C,GACnC,IAAI4C,EAAIsC,IAOR,OANAtC,EAAE5C,GAAKA,EACP4C,EAAEC,KAAOA,EACTD,EAAEgD,SAAU,EACZhD,EAAEQ,YAAcP,EAAK5B,OAAS,EAAI,QAAKgC,EACvCL,EAAEiD,cAAe,EACjBrC,EAAaX,EAAMD,GACZA,EAiCT,SAASa,EAAab,GACpB,IAdF,SAAiBuB,GACf,OAAOA,EAAOhB,MAA0B,IAAnBgB,EAAOhB,IAAIU,IAa5BiC,CAAQlD,IAlBd,SAA4BuB,GAC1B,OAA0B,IAAnBA,EAAOyB,SARhB,SAAgCzB,GAI9B,OAHAA,EAAOyB,QAAUzB,EAAOtB,KAAKkD,MAAM,SAASnD,GAC1C,OAAOA,EAAEwC,SAEJjB,EAAOyB,QAIoBI,CAAuB7B,GAiBtC8B,CAAmBrD,GACtC,QAAiBK,IAAbf,EAAJ,CAIAA,EAAWU,EACPA,EAAEQ,cAAaR,EAAES,OAAOT,EAAES,OAAOpC,OAAS,GAAK2B,EAAEQ,aACrD,IAAI8C,EAAYtD,EAAE5C,GAAGC,MAAM2C,EAAE5C,GAAI4C,EAAES,aACjBJ,IAAdiD,GACFtD,EAAEsD,GAEJhE,OAAWe,OACWA,IAAlBL,EAAEQ,cAA2BR,EAAEQ,YAAc,IACjDR,EAAEiD,cAAe,GACE,KAjmBZvD,GAAuBC,IAimBJ4D,IAxB5B,SAA+BvD,GAC7B,OAAOA,EAAEW,UAAU6C,KAAK,SAASxD,GAAK,OAAOA,EAAEiD,eAwB3CQ,CAAsBzD,KACnBL,EAEHK,EAAEW,UAAU+C,QAAQ,SAASC,GACvBA,EAASV,cAAcW,EAAiB/C,EAAc8C,KAHpC3D,EAAEA,EAAEiB,WAd9B2C,EAAiB/C,EAAcb,GAsDnC,SAAS6D,EAAS7D,GAChB,IAAID,EACAY,EAAYX,EAAEW,UAClB,IAAiB,IAAbX,EAAE0C,OAAkB,CAEtB,IADA1C,EAAE0C,QAAS,EACN3C,EAAI,EAAGA,EAAIY,EAAUtC,SAAU0B,EAClC8D,EAASlD,EAAUZ,IAErBP,IAAQC,GAAgBO,GAI5B,SAAS4D,EAAiBE,EAASvC,GACjChC,EAASe,KAAKiB,GACdA,EAAOkB,SAASnC,KAAKwD,GACrBvC,EAAO0B,cAAe,EAMxB,SAASM,IAEP,IADA7D,GAAsB,EACfH,EAASlB,OAAS,GAAG,CAC1B,IAAIkD,EAAShC,EAASwE,QAClBC,EAAezC,EAAOkB,SAASsB,QAC/BC,GAAgBzC,EAAO0B,cAAce,EAAazC,GAExD7B,GAAsB,EASxB,SAAS6C,EAAkBpF,EAAG6C,GAC5BA,EAAEiB,IAAM9D,EACR6C,EAAEwC,QAAS,OACMnC,IAAbf,GACFK,GAAsB,EAnE1B,SAAyBK,GACvB,IAAID,EAAGkE,EAAGC,EACNvD,EAAYX,EAAEW,UAClB,IAAKZ,EAAI,EAAGA,EAAIY,EAAUtC,SAAU0B,GAClCmE,EAAOvD,EAAUZ,IACRQ,MAAQP,EACfG,EAAU+D,SAEe7D,IAArB6D,EAAK1D,aAA2B0D,EAAK1D,YAAYF,KAAKN,GAC1DkE,EAAKjB,cAAe,EACpBY,EAASK,IAGb,KAAOzE,GAAgB,IAAKA,GAEH,KADvBwE,EAAIzE,EAAMC,IACJwD,cAAuBpC,EAAaoD,GAC1CA,EAAEvB,QAAS,EAoDXyB,CAAgBnE,GACZT,EAASlB,OAAS,GAAGkF,IACzB5D,GAAsB,GACbL,IAAaU,EAU1B,SAAuBA,EAAGoE,GACxB,IAAIrE,EAAGmE,EACP,IAAKnE,EAAI,EAAGA,EAAIqE,EAAM/F,SAAU0B,GAC9BmE,EAAOE,EAAMrE,IACJQ,MAAQP,QACUK,IAArB6D,EAAK1D,aACP0D,EAAK1D,YAAYF,KAAKN,GAExBkE,EAAKjB,cAAe,GAEpB9C,EAAU+D,GAnBZG,CAAcrE,EAAGA,EAAEW,WAEnBiD,EAAiB,SAAS5D,GAAKuC,EAAkBpF,EAAG6C,IAAOA,GA4B/D,SAASY,EAAaX,EAAMD,GAC1B,IAAK,IAAID,EAAI,EAAGA,EAAIE,EAAK5B,SAAU0B,EACjCE,EAAKF,GAAGY,UAAUL,KAAKN,GAU3B,SAASsE,EAAetE,EAAGW,GACzB,IAAI4D,EAAM5D,EAAU6D,QAAQxE,GAC5BW,EAAU4D,GAAO5D,EAAUA,EAAUtC,OAAS,GAC9CsC,EAAUtC,SAQZ,SAASoG,EAAWzE,GAClB,IAAK,IAAID,EAAI,EAAGA,EAAIC,EAAEC,KAAK5B,SAAU0B,EACnCuE,EAAetE,EAAGA,EAAEC,KAAKF,GAAGY,WAE9BX,EAAEC,KAAK5B,OAAS,EAOlB,SAAS8B,EAAUH,QACFK,IAAXL,EAAEC,MAAoBwE,EAAWzE,QACvBK,IAAVL,EAAEO,KAAmBkE,EAAWzE,EAAEO,KAUxC,SAASmE,KA/uBT9E,EAAK2B,OAAS,SAASoD,GACrB,IAAIxE,EAAYC,EAAsB,GAAIf,GACtCW,EAAIsC,IAKR,OAJAtC,EAAEO,IAAMJ,EACRH,EAAES,OAAS,GACXN,EAAUQ,UAAUL,KAAKN,GACrBzC,UAAUc,OAAS,GAAG2B,EAAE2E,GACrB3E,GAGTJ,EAAK2B,OAAO,mBAAqB3B,EAAK2B,OAAOoB,GAAK/C,EAAK2B,OAoBvD3B,EAAKC,QAAU+E,EAAO,EAAG/E,GAqCzBD,EAAKiF,SAAW,SAAStD,GACvB,UAxGkBuD,EAwGAvD,IAvGDuD,EAAIjC,aAAeiC,EAAIC,MAAQD,EAAIzH,QAuGvB,WAAYkE,EAxG3C,IAAoBuD,GAoIpBlF,EAAKoF,UAAY,SAAShF,GAKxB,OAJkB,IAAdA,EAAEgD,UACJhD,EAAEgD,SAAU,EACZnC,EAAab,IAERA,GAqBTJ,EAAKmC,OAAS,SAASkD,EAAMjF,GAI3B,OAHAyE,EAAWzE,EAAEO,KACb0E,EAAKtE,UAAUL,KAAKN,EAAEO,KACtBP,EAAEO,IAAIN,KAAKK,KAAK2E,GACTjF,GAwBTJ,EAAKkB,IAAM8D,EAAO,EAAG9D,GAuBrBlB,EAAKyB,MAAQuD,EAAO,EAAGvD,GA0BvBzB,EAAKoC,GAAK4C,EAAO,EAAG5C,GAgBpBpC,EAAK6B,GAAKmD,EAAO,EAAG,SAAS7D,EAAGf,GAC9B,OAAOH,EAAQ,SAASG,GAAKe,EAAEf,EAAEiB,MAAS,CAACjB,MAqB7CJ,EAAKsF,KAAON,EAAO,EAAG,SAAS7D,EAAGoE,EAAKnF,GACrC,IAAIoF,EAAKvF,EAAQ,SAASG,EAAGgB,GAC3BA,EAAKmE,EAAMpE,EAAEoE,EAAKnF,EAAEiB,OACnB,CAACjB,IAEJ,OADKoF,EAAG5C,QAAQ4C,EAAGD,GACZC,IAqBTxF,EAAKyF,MAAQT,EAAO,EAAG,SAAS1C,EAAID,GAClC,IAAIjC,EAAIJ,EAAKoF,UAAUnF,EAAQ,SAASqC,EAAID,EAAIjB,EAAMsE,GAChDA,EAAQ,GACVtE,EAAKsE,EAAQ,MACJpD,EAAGM,OACZxB,EAAKkB,EAAGjB,KACCgB,EAAGO,QACZxB,EAAKiB,EAAGhB,MAET,CAACiB,EAAID,KAIR,OAHArC,EAAKmC,OAAOlC,EAAQ,WAClB,OAAO,GACN,CAACqC,EAAG3B,IAAK0B,EAAG1B,MAAOP,GACfA,IAwBTJ,EAAK2F,UAAYX,EAAO,EAAG,SAASY,EAAOC,GAEzC,OADAD,EAAQA,EAAM,IAAId,GACX7E,EAAQ,SAAS4F,EAAQzE,GAC9B,IAAI0E,EAAMF,EAAM,0BAAqBnF,EAAWoF,EAAOxE,KACvD,OAAIyE,IAAuC,IAAhCA,EAAI,yBACb1E,EAAKT,KAAI,GACFmF,EAAI,uBAEJA,GAER,CAACD,MAkBN7F,EAAKgF,OAASA,EAqEdhF,EAAK+F,YAAc,SAAqBC,GACtC,IAAI5F,EAAIJ,EAAK2B,SAKb,OAJAqE,EAAEC,KAAK,SAAS5E,GACdjB,EAAEiB,GACFjB,EAAEO,KAAI,KAEDP,GAGTJ,EAAKkG,eAAiB,SAAwB9F,GAC5C,OAAOH,EAAQ,SAASG,EAAGgB,GACzBhB,IAAI6F,KAAK7E,IACR,CAAChB,KAuVN0E,EAAkBqB,UAAU,qBAAuB,aACnDrB,EAAkBqB,UAAU,uBAAyB,aACrDrB,EAAkBqB,UAAU,qBAAuB,SAAS/F,EAAGgG,GAAK,OAAOA,GAE3E,MAAiBpG,EC7xBjB,MAAMqG,EAAEC,OAAOC,UAAUF,EAAEG,KAAKA,GAAGF,OAAOG,KAAKD,GAAG1C,QAAQO,GAAGgC,EAAEhC,GAAGmC,EAAEnC,IAAIgC,IAAIG,EAAE,CAACH,EAAEK,EAAEtG,KAAK,MAAMuG,SAASvG,EAAE,GAAGA,GAAG,WAAWuG,EAAE,GAAGC,MAAMC,QAAQzG,GAAG,IAAI,MAAMiE,KAAKjE,EAAEsG,EAAEF,EAAEH,EAAEK,EAAErC,QAAQ,IAAI,MAAMsC,KAAKL,OAAOG,KAAKrG,GAAG,CAAC,MAAMe,EAAEf,EAAEuG,GAAG,mBAAmBxF,EAAEuF,EAAEC,GAAGxF,EAAEuF,EAAEC,GAAGtC,QAAG,IAASlD,EAAEkF,IAAIS,MAAMH,GAAGD,EAAEK,OAAOJ,EAAE,UAAUD,EAAEC,GAAkDD,EAAEC,GAAjD,OAAOxF,GAAG,iBAAiBA,GAAGyF,MAAMC,QAAQ1F,GAAQA,EAAE,iBAAiBuF,EAAEC,GAAQxF,IAAIuF,EAAEC,GAAGxF,EAAEkD,EAAEqC,EAAEC,GAAGxF,GAAQqF,GAAE,EAAG,GAAGrF,OAAO,aAAawF,IAAID,EAAEtG,EAAEsG,EAAErC,IAAI,OAAOqC,GAAGrC,EAAE,CAACA,KAAKqC,KAAK,MAAMtG,EAAEwG,MAAMC,QAAQxC,GAAG,OAAOmC,EAAEpG,EAAEA,EAAEiE,EAAE2C,QAAQX,EAAE,GAAGhC,GAAGqC,KCGjhB/E,OAAEA,EAAF2D,KAAUA,GAAStF,EAiBZiH,EAA2BC,IACtC,MAAMC,EAASxF,IACTyF,EAAS9B,EACb,CAAC+B,EAAUC,IAAuB7B,EAAM4B,EAAOC,GAC/CJ,EACAC,GAGF,OAAOb,OAAOC,OAAOa,EAAQ,CAAED,OAAAA"}